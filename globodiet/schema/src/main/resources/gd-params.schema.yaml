# -----------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#       http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# -----------------------------------------------------------

params.classification.FoodGroup:
  namespace: params.classification
  table: GROUPS
  superType: params.classification.FoodGrouping
  secondaryKey: |
    GROUP
  title: String.format("%s (code=%s)", name, code)
  icon: |
    solid utensils .food-color,
    solid layer-group .food-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Food group
  fields:
    code:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Food group code
    name:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Food group name
    shortName:
      column: NAME_SHORT
      column-type: nvarchar(20)
      required: true
      unique: true
      description: |
        Food group short name
params.classification.FoodSubgroup:
  namespace: params.classification
  table: SUBGROUP
  superType: params.classification.FoodGrouping
  secondaryKey: |
    GROUP
    SUBGROUP1
    SUBGROUP2
  title: |
    String.format("%s (code=%s|%s|%s)", 
     name, 
     dita.commons.format.FormatUtils.emptyToDash(foodGroupCode), 
     dita.commons.format.FormatUtils.emptyToDash(foodSubgroupCode), 
     dita.commons.format.FormatUtils.emptyToDash(foodSubSubgroupCode))
    
  icon: |
    solid utensils .food-color,
    solid layer-group .food-color .ov-size-80 .ov-right-55 .ov-bottom-55,
    solid circle-chevron-down .food-color-em .ov-size-60 .ov-left-50 .ov-bottom-85
    
  description: |
    Food groups further narrowed down by subgroups and optional sub-subgroups
  fields:
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: true
      unique: false
      description: |
        Food sub-group code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      description: |
        Food sub-sub-group code
    name:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Name of the food (sub-)(sub-)group
    fatOrSauceSweetenerSubgroupQ:
      column: SGRP_FSS
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        0:no:non fat/sauce/sweetener subgroup
        1:yes:fat/sauce/sweetener subgroup
      description: |
        0=non fat/sauce/sweetener subgroup 1= fat/sauce/sweetener subgroup
    fatOrSauceSubgroupThatCanBeLeftOverInTheDishQ:
      column: SGRP_FLO
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        0:no:non fat/sauce subgroup
        1:yes:fat/sauce subgroup that can be left over in the dish
      description: |
        0=non fat/sauce subgroup 
        1= fat/sauce subgroup that can be left over in the dish
    fatDuringCookingSubgroupQ:
      column: SGRP_FDC
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        0:no:non fat during cooking subgroup
        1:yes:fat during cooking subgroup
      description: |
        0=non fat during cooking subgroup 
        1= fat during cooking subgroup
    shortName:
      column: NAME_SHORT
      column-type: nvarchar(20)
      required: true
      unique: true
      description: |
        Short Name of the food (sub-)(sub-)group
params.classification.RecipeGroup:
  namespace: params.classification
  table: RGROUPS
  superType: params.classification.RecipeGrouping
  secondaryKey: |
    GROUP
  title: String.format("%s (code=%s)", name, code)
  icon: |
    solid stroopwafel .recipe-color,
    solid layer-group .recipe-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Recipe group 
  fields:
    code:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Recipe Group code
    name:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Name of the Recipe group
    shortName:
      column: NAMEG_SHORT
      column-type: nvarchar(20)
      required: true
      unique: true
      description: |
        Short Name of the Recipe group
params.classification.RecipeSubgroup:
  namespace: params.classification
  table: RSUBGR
  superType: params.classification.RecipeGrouping
  secondaryKey: |
    GROUP
    SUBGROUP
  title: String.format("%s (code=%s|%s)", name, recipeGroupCode, code)
  icon: |
    solid stroopwafel .recipe-color,
    solid layer-group .recipe-color .ov-size-80 .ov-right-55 .ov-bottom-55,
    solid circle-chevron-down .recipe-color-em .ov-size-60 .ov-left-50 .ov-bottom-85
    
  description: |
    Recipe subgroup
  fields:
    recipeGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe group code
    code:
      column: SUBGROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      description: |
        Recipe sub-group code
    name:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Name of the recipe (sub-)group
    shortName:
      column: NAMES_SHORT
      column-type: nvarchar(20)
      required: true
      unique: true
      description: |
        Short Name of the recipe (sub-)group
params.food_coefficient.DensityFactorForFood:
  namespace: params.food_coefficient
  table: DENSITY
  secondaryKey:
  title: String.format("%f", densityCoefficient)
  icon: null
  description: |
    Density factor for food
  fields:
    foodOrRecipeCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
        MIXEDREC.R_IDNUM
      description: |
        Food identification number (FOODNUM)
        either Foods.foodnum OR Mixedrec.r_idnum
    densityCoefficient:
      column: D_FACTOR
      column-type: float(53)
      required: true
      unique: false
      description: |
        Density coefficient
    facetDescriptorsLookupKey:
      column: FACETS_STR
      column-type: nvarchar(100)
      required: false
      unique: false
      plural: true
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Facet string
        multiple (descface.facet_code + descface.descr_code) comma separated (e.g. 0401,0203,051)
    priority:
      column: PRIORITY
      column-type: nvarchar(2)
      required: true
      unique: false
      description: |
        Priority order
    withUnediblePartQ:
      column: EDIB
      column-type: nvarchar(1)
      required: false
      unique: true
      enum: |
        1:un-edible excluded:without un-edible part,
        2:un-edible included:with un-edible (as estimated)
      description: |
        1 = without un-edible part,
        2 = with un-edible (as estimated)
    rawOrCooked:
      column: RAWCOOK
      column-type: nvarchar(1)
      required: false
      unique: false
      enum: |
        1:raw
        2:cooked: as estimated
      description: |
        1 = raw, 
        2 = cooked (as estimated) 
    forFoodOrRecipe:
      column: D_TYPE
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        1:Food:density for food/ingredient,
        2:Recipe:density for recipe
      description: |
        1 = density for food/ingredient,
        2 = density for recipe
params.food_coefficient.EdiblePartCoefficientForFood:
  namespace: params.food_coefficient
  table: EDIBLEP
  secondaryKey:
  title: null
  icon: null
  description: |
    Edible part coefficients for foods
  fields:
    foodCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food identification number (FOODNUM)
    ediblePartCoefficient:
      column: EPC_FACT
      column-type: float(53)
      required: true
      unique: false
      description: |
        Edible part coefficient
    facetDescriptorLookupKey:
      column: FACETS_STR
      column-type: nvarchar(100)
      required: false
      unique: false
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Facet string; multiple (descface.facet_code + descface.descr_code) comma separated (e.g. 0401,0203,051)
    priority:
      column: PRIORITY
      column-type: nvarchar(2)
      required: true
      unique: false
      description: |
        Priority order
params.food_coefficient.PercentOfFatLeftInTheDishForFood:
  namespace: params.food_coefficient
  table: FATLEFTO
  secondaryKey:
  title: null
  icon: solid percent
  description: |
    % of fat left in the dish for food
  fields:
    fatGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Group code of the FAT's group
    fatSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Subgroup code of the FAT
    fatSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Sub-Subgroup code of the FAT
    percentageOfFatLeftInTheDish:
      column: PCT_LEFT
      column-type: float(53)
      required: true
      unique: false
      description: |
        Percentage of fat left in the dish
params.food_coefficient.PercentOfFatOrSauceOrSweetenerAddedAfterCookingForFood:
  namespace: params.food_coefficient
  table: SPFACOOK
  secondaryKey:
  title: null
  icon: solid percent
  description: |
    % of fat/sauce/sweetener added after cooking attached to a food
  fields:
    foodGroupCode:
      column: FOOD_GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: FOOD_SUBG1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        FOOD_GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: FOOD_SUBG2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        FOOD_GROUP
        FOOD_SUBG1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-Subgroup code
    foodCode:
      column: FOOD_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food code
    fssFatGroupCode:
      column: X_GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Fat group code for F/S/S
    fssFatSubgroupCode:
      column: X_SUBG1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        X_GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Fat subgroup code for F/S/S
    fssFatSubSubgroupCode:
      column: X_SUBG2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        X_GROUP
        X_SUBG1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Fat sub-subgroup code for F/S/S
    fssFatCode:
      column: X_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Fat code for F/S/S
    percentageOfFat:
      column: PCT_ADDED
      column-type: float(53)
      required: true
      unique: false
      description: |
        Percentage of fat
params.food_coefficient.PercentOfFatUseDuringCookingForFood:
  namespace: params.food_coefficient
  table: SPFDCOOK
  secondaryKey:
  title: null
  icon: solid percent
  description: |
    % of fat use during cooking attached to a food
  fields:
    foodGroupCode:
      column: FOOD_GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: FOOD_SUBG1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        FOOD_GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: FOOD_SUBG2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        FOOD_GROUP
        FOOD_SUBG1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-Subgroup code
    foodCode:
      column: FOOD_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food code
    fatGroupCode:
      column: FAT_GROUP
      column-type: nvarchar(2)
      required: false
      unique: true
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Fat group code for fat
    fatSubgroupCode:
      column: FAT_SUBG1
      column-type: nvarchar(2)
      required: false
      unique: true
      discriminator: |
        FAT_GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Fat subgroup code for fat
    fatSubSubgroupCode:
      column: FAT_SUBG2
      column-type: nvarchar(2)
      required: false
      unique: true
      discriminator: |
        FAT_GROUP
        FAT_SUBG1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Fat sub-subgroup code for fat
    fatCode:
      column: FAT_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Fat code for fat
    cookingMethodFacetDescriptorLookupKey:
      column: COOK_METH
      column-type: nvarchar(4)
      required: true
      unique: false
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Cooking method Facet and Descriptor codes (e.g. 0305)
    percentageOfFatAbsorbedDuringCooking:
      column: PCT_ABSOR
      column-type: float(53)
      required: true
      unique: false
      description: |
        Percentage of fat absorbed during cooking
params.food_coefficient.RawToCookedConversionFactorForFood:
  namespace: params.food_coefficient
  table: RAWCOOK
  secondaryKey:
  title: null
  icon: null
  description: |
    Raw to cooked conversion factors for foods
  fields:
    foodCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food identification number (FOODNUM)
    rawToCookedFactor:
      column: RC_FACTOR
      column-type: float(53)
      required: true
      unique: false
      description: |
        Raw to cooked factor
    facetDescriptorsLookupKey:
      column: FACETS_STR
      column-type: nvarchar(100)
      required: false
      unique: false
      plural: true
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Facet string; multiple (descface.facet_code + descface.descr_code) comma separated (e.g. 0401,0203,051)
    priority:
      column: PRIORITY
      column-type: nvarchar(3)
      required: true
      unique: false
      description: |
        Priority order
params.food_descript.Brand:
  namespace: params.food_descript
  table: BRANDNAM
  secondaryKey: |
    NAME
    GROUP
    SUBGROUP1
    SUBGROUP2
  title: String.format("%s", nameOfBrand)
  icon: brands shopify .brand-color
  description: |
    Brand names are used in the food description phase
  fields:
    nameOfBrand:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Name of brand
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-subgroup code
params.food_descript.FacetDescriptorPathwayForFood:
  namespace: params.food_descript
  table: FOODFAEX
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .food-color,
    solid tag .food-color .ov-size-60 .ov-right-50 .ov-bottom-85,
    solid exclamation-circle .food-color-em .ov-size-60 .ov-left-50 .ov-bottom-85
    
  description: |
    Facet/descriptor pathway for individual food.
    Supersedes this food's group facet/descriptor pathway from @{table GROUPFAC}.
  fields:
    foodCode:
      column: FOODNUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        food ID number
    mandatoryInSequenceOfFacetsCode:
      column: FACET_CODE
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        FACETS.FACET_CODE
      description: |
        Food Facet codes that will appear in the sequence of facets corresponding to this Food 
        (supersedes this Food's group pathway). 
        The list of descriptors will be the ones defined for the subgroup in @{table GROUPFAC}.
    displayOrder:
      column: ORDER_FAC
      column-type: int(10)
      required: true
      unique: false
      description: |
        Order to display the facets for the attached food (same order as ORDER_FAC in @{table GROUPFAC})
params.food_descript.FacetDescriptorPathwayForFoodGroup:
  namespace: params.food_descript
  table: GROUPFAC
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .food-color,
    solid tag .food-color .ov-size-60 .ov-right-50 .ov-bottom-85
    
  description: |
    Facet/descriptor pathway for food group/subgroup.
    Optionally can be superseded by @{table FOODFAEX}.
  fields:
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food Subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food Sub-subgroup code
    facetCode:
      column: FACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        FACETS.FACET_CODE
      description: |
        Facet code
    descriptorCode:
      column: DESCR_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      discriminator: |
        FACET_CODE
      foreignKeys: |
        DESCFACE.DESCR_CODE
      description: |
        Descriptor code
    defaultFlag:
      column: DEFAULT
      column-type: nvarchar(1)
      required: false
      unique: false
      description: |
        Default flag (if set to 'D' it is the default descriptor)
    notInNameFlag:
      column: NOTINNAME
      column-type: nvarchar(1)
      required: false
      unique: false
      description: |
        Not in name flag
    facetDisplayOrder:
      column: ORDER_FAC
      column-type: int(10)
      required: true
      unique: false
      description: |
        Order to display the facets within a group/subgroup
    descriptorDisplayOrder:
      column: ORDER_DESC
      column-type: int(10)
      required: true
      unique: false
      description: |
        Order to display the descriptors within a group/subgroup and a facet
params.food_descript.FoodDescriptor:
  namespace: params.food_descript
  table: DESCFACE
  secondaryKey: |
    FACET_CODE
    DESCR_CODE
  title: String.format("%s (code=%s|%s)", name, facetCode, code)
  icon: |
    solid utensils .food-color,
    solid tag .food-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Descriptor for food facets (not recipe facets)
  fields:
    facetCode:
      column: FACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        FACETS.FACET_CODE
      description: |
        Facet code
    code:
      column: DESCR_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      description: |
        Descriptor code
    name:
      column: DESCR_NAME
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Descriptor name
    type:
      column: DESC_COOK
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:Other:descriptor without consequences in the algorithms (also from other facets)
        1:Raw:
        2:Question:Descriptors to ask the question 'fat used during cooking'
        3:undocumented:found in austrian data for 'frittiert' - invalid enum constant?
      description: |
        0=Other descriptor without consequences in the algorithms (also from other facets)
        1=Raw descriptor 
        2=Descriptors to ask the question 'fat used during cooking' 
    single:
      column: DESC_SINGLE
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        TODO missing description
    other:
      column: DESC_OTHER
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        TODO missing description
params.food_descript.FoodFacet:
  namespace: params.food_descript
  table: FACETS
  secondaryKey: |
    FACET_CODE
  title: String.format("%s (code=%s)", name, code)
  icon: |
    solid utensils .food-color,
    solid swatchbook .food-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Facet describing food (not recipe)
  fields:
    code:
      column: FACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Facet code
    name:
      column: FACET_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Facet name
    text:
      column: FACET_TEXT
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Facet text (text to show on the screen describing the facet)
    type:
      column: FACET_TYPE
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:Standard: facets with descriptors available in Descface table
        1:Brand:Facets with descriptors available in Brandnam table
        2:Fat:Facets with descriptors available in Foods table - facet 15 type of fat
        3:Liquid:Facets with descriptors available in Foods table - facet 16 type of milk/liquid used
      description: |
        0=Standard facets with descriptors available in Descface table 
        1=Facets with descriptors available in Brandnam table 
        2=Facets with descriptors available in Foods table - facet 15 type of fat 
        3=Facets with descriptors available in Foods table - facet 16 type of milk/liquid used
    typeCardinality:
      column: FACET_TYPE_S
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:single:facet with single-selection of descriptor
        1:multi:facets with multi-selection of descriptors
      description: |
        0 = facet with single-selection of descriptor 
        1 = facets with multi-selection of descriptors
    group:
      column: FACET_GRP
      column-type: nvarchar(2147483647)
      required: false
      unique: true
      description: |
        If Facet_type=2, series of groups/subgroups used to display the foods from the Foods table. 
        Comma is used as delimiter (e.g. 10,050701,050702)
    labelOnHowToAskTheFacetQuestion:
      column: FACET_QUEST
      column-type: nvarchar(300)
      required: true
      unique: true
      description: |
        Label on how to ask the facet question
params.food_descript.ImprobableSequenceOfFacetAndDescriptor:
  namespace: params.food_descript
  table: DESC_IMP
  secondaryKey:
  title: null
  icon: null
  description: |
    Improbable sequence of facets/descriptors
  fields:
    foodCode:
      column: FOODNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food identification number
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code 
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: true
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: true
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-subgroup code
    facetCode:
      column: FACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        FACETS.FACET_CODE
      description: |
        Facet code
    descriptorCode:
      column: DESCR_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      discriminator: |
        FACET_CODE
      foreignKeys: |
        DESCFACE.DESCR_CODE
      description: |
        Descriptor code
    facetString:
      column: FACET_STR
      column-type: nvarchar(2147483647)
      required: true
      unique: false
      description: |
        Facet string
params.food_descript.RuleAppliedToFacet:
  namespace: params.food_descript
  table: FACETRUL
  secondaryKey:
  title: null
  icon: null
  description: |
    Rule applied to facet 
  fields:
    facetCode:
      column: FACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        FACETS.FACET_CODE
      description: |
        Facet where the rule must be applied.
    facetDescriptorLookupKey:
      column: FACDESC
      column-type: nvarchar(4)
      required: true
      unique: false
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Facet code + Descriptor code that must exist in the current food description 
        to allow the facet (FACET_CODE) to be asked. 
        Additionally a group/subgroup code can be defined to force the food being described 
        to belong to a specific food group to allow the facet to be asked (leave it to blanks if not applicable).
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: true
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Sub-subgroup code
params.food_list.ComposedRecipeIngredient:
  namespace: params.food_list
  table: CRING
  secondaryKey:
  title: null
  icon: null
  description: |
    Composed Recipe Ingredient
  fields:
    recipeCode:
      column: R_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      description: |
        Recipe identification number (FOODNUM in the FOODS.DBF file)
    foodOrRecipeCode:
      column: FOODNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      foreignKeys: |
        FOODS.FOODNUM
        MIXEDREC.R_IDNUM
      description: |
        Food (ingredient) Identification Code
        either Foods.foodnum OR Mixedrec.r_idnum
    type:
      column: TYPE
      column-type: nvarchar(1)
      required: false
      unique: true
      enum: |
        1:Food:ingredient from Food list
        2:Recipe:ingredient from Recipe list
      description: |
        If type=1 ingredient from Food list, 
        If type=2 ingredient from Recipe list
params.food_list.Food:
  namespace: params.food_list
  table: FOODS
  secondaryKey: |
    FOODNUM
  title: String.format("%s (code=%s)", foodNativeName, code)
  icon: solid utensils .food-color
  description: |
    Food, Product, On-the-fly Recipe or Alias
  fields:
    code:
      column: FOODNUM
      column-type: nvarchar(5)
      required: true
      unique: false
      description: |
        Identification Code for Food, Product, On-the-fly Recipe or Alias
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food Group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food Subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food Sub(sub)group code
    foodNativeName:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Native (localized) name of this Food, Product, On-the-fly Recipe or Alias 
    typeOfItem:
      column: TYPE
      column-type: nvarchar(2)
      required: false
      unique: false
      enum: |
        :Normal Food
        GI:Generic Food
        SH:Alias:Synonym
        CR:On-the-fly Recipe:Recipe, built during the interview (on the fly)
      description: |
        Type of item: 
          (none) -> Normal Food Item
          GI -> Generic Food Item 
          SH -> Shadow Item 
          CR -> Composed Recipe (On-the-fly Recipe)
                Definition: its different ingredients can be identified and 
                quantified separately after preparation 
                (e.g. meat balls in sauce, rice with sauce, couscous dish, mixed salad) 
                or just before mixing (e.g. coffee with milk).
                Composed recipes are built during the interview: there is no a priori list of composed recipes. 
                They are made from items listed below/linked to a quick list item.
                Example: Salad 
                - Lettuce 
                - Tomato 
                - Cucumber 
                - Salad dressing (can be a recipe in some projects where all sauces are in recipes)
    groupOrdinal:
      column: ORDER
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:first:first order, use for GI
        2:second:second order, use for non GI
      description: |
        Auxiliary field to force an internal order within each subgroup 
        (if GI then 1 otherwise 2, this forces the GI at the top)
    dietarySupplementQ:
      column: SUPPL
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:No:not a Dietary Supplement
        1:Yes:is a Dietary Supplement
      description: |
        0=food 
        1=dietary supplement
params.food_max.MaximumValueForAFoodOrGroup:
  namespace: params.food_max
  table: MAXVAL
  secondaryKey:
  title: null
  icon: null
  description: |
    Maximum value for a food or a (sub-)(sub-)group
  fields:
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-Subgroup code
    foodCode:
      column: IDNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      description: |
        Food code
    maximumValue:
      column: MAXIMA
      column-type: float(53)
      required: true
      unique: false
      description: |
        Maximum value
    facetDescriptorLookupKey:
      column: FACETS_STR
      column-type: nvarchar(100)
      required: false
      unique: false
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Facet string; multiple (descface.facet_code + descface.descr_code) comma separated (e.g. 0401,0203,051)
    priority:
      column: PRIORITY
      column-type: nvarchar(2)
      required: true
      unique: false
      description: |
        Priority order
params.food_probing.ProbingQuestionPathwayForFood:
  namespace: params.food_probing
  table: PQPATH
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .food-color,
    solid question .food-color .ov-size-60 .ov-right-50 .ov-bottom-85
    
  description: |
    Probing question pathway for food.
  fields:
    probingQuestionCode:
      column: PQ_CODE
      column-type: nvarchar(3)
      required: false
      unique: false
      foreignKeys: |
        PROBQUE.PQ_CODE
      description: |
        Probing question code
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-subgroup code
    foodCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food identification number (FOODNUM)
params.food_quantif.QuantificationMethodPathwayForFood:
  namespace: params.food_quantif
  table: QM_FOODS
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .food-color,
    solid scale-balanced .food-color .ov-size-60 .ov-right-50 .ov-bottom-85,
    solid exclamation-circle .food-color-em .ov-size-60 .ov-left-50 .ov-bottom-85
    
  description: |
    Quantification method pathway for individual food. 
    Supersedes this food's group quantification method pathway from @{table QM_GROUP}.
  fields:
    foodCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food identification number (FOODNUM)
    quantificationMethod:
      column: METHOD
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        P:Photo
        H:Household Measure
        U:Standard Unit
        S:Standard Portion
        A:Shape
      description: |
        Quantification method code: 
        'P' for photo, 
        'H' for HHM, 
        'U' for stdu, 
        'S' for standard portion,
        'A' for shape
    photoCode:
      column: METH_CODE
      column-type: nvarchar(4)
      required: false
      unique: false
      foreignKeys: |
        M_PHOTOS.PH_CODE
        M_SHAPES.SH_CODE
      description: |
        Photo code (if method='P' and 'A'); 
        either M_photos.ph_code or M_shapes.sh_code
params.food_quantif.QuantificationMethodPathwayForFoodGroup:
  namespace: params.food_quantif
  table: QM_GROUP
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .food-color,
    solid scale-balanced .food-color .ov-size-60 .ov-right-50 .ov-bottom-85,
    
  description: |
    Quantification method pathway for food group/subgroup.
    Optionally can be superseded by @{table QM_FOODS}.
  fields:
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: true
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-subgroup code
    physicalStateFacetDescriptorLookupKey:
      column: PHYS_STATE
      column-type: nvarchar(4)
      required: false
      unique: false
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Descriptor code of Physical state facet descface.facet_code+descface.descr_code (e.g. 0205)
    rawOrCookedAsConsumed:
      column: RAW_COOKED
      column-type: nvarchar(1)
      required: false
      unique: false
      enum: |
        1:raw
        2:cooked: as Consumed
      description: |
        1=raw, 
        2=cooked (as Consumed)
    quantificationMethod:
      column: METHOD
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        P:Photo
        H:Household Measure
        U:Standard Unit
        S:Standard Portion
        A:Shape
      description: |
        Quantification method code:
        'P' for photo, 
        'H' for HHM, 
        'U' for stdu, 
        'S' for standard portion, 
        'A' for shape
    photoCode:
      column: METH_CODE
      column-type: nvarchar(4)
      required: false
      unique: false
      foreignKeys: |
        M_PHOTOS.PH_CODE
        M_SHAPES.SH_CODE
      description: |
        Photo code (if method='P' and 'A'); 
        either M_photos.ph_code or M_shapes.sh_code
    comment:
      column: COMMENT
      column-type: nvarchar(200)
      required: true
      unique: false
      description: |
        Comment
params.food_quantif.StandardPortionForFood:
  namespace: params.food_quantif
  table: M_STDPOR
  secondaryKey:
  title: null
  icon: null
  description: |
    standard portions for foods
  fields:
    standardPortionQuantity:
      column: STDP_QUANT
      column-type: float(53)
      required: true
      unique: false
      description: |
        Standard portion quantity
    foodCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Food identification number (=FOODMUM)
    rawOrCooked:
      column: RAW_COOKED
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:raw
        2:cooked: as estimated
      description: |
        1 = raw, 
        2 = cooked (as estimated)
    withUnediblePartQ:
      column: EDIB
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:un-edible excluded:without un-edible part
        2:un-edible included:with un-edible (as estimated)
      description: |
        1 = without un-edible part, 
        2 = with un-edible (as estimated)
    commentAttachedToTheStandardPortion:
      column: COMMENT
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Comment attached to the standard portion
    standardPortionCode:
      column: PORT_CODE
      column-type: nvarchar(4)
      required: true
      unique: false
      description: |
        Standard portion code for the same food (0001, 0002, 0003)
    unit:
      column: STDP_UNIT
      column-type: nvarchar(1)
      required: true
      unique: false
      description: |
        G = in grams, V = in ml (volume)
    orderToDisplayTheStandardPortion:
      column: D_ORDER
      column-type: float(53)
      required: true
      unique: false
      description: |
        Order to display the standard portion
params.food_table.ItemDefinition:
  namespace: params.food_table
  table: ITEMS_DEF
  secondaryKey:
  title: String.format("Item %s (sequentialNumber=%d)", typeOfRecord.title(), sequentialNumber)
  icon: solid paperclip
  description: |
    Items list and definition
  fields:
    sequentialNumber:
      column: ITEM_SEQ
      column-type: int(10)
      required: true
      unique: true
      description: |
        Sequential number
    typeOfRecord:
      column: TYPE
      column-type: nvarchar(2)
      required: true
      unique: false
      enum: |
        F:Food
        R:Recipe
        A2:Fat attached
        A3:Liquid attached
      description: |
        Type of record: 
        F=food, 
        R=recipe, 
        A2=fat attached, 
        A3=liquid attached
    foodOrRecipeGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
        RGROUPS.GROUP
      description: |
        Food or recipe group
    foodOrRecipeSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
        RSUBGR.SUBGROUP
      description: |
        Food or recipe sub-group
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-sub-group
    foodOrRecipeCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
        MIXEDREC.R_IDNUM
      description: |
        Food or Recipe code
    facetString:
      column: FACET_STR
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Facet string
    brandName:
      column: BRANDNAME
      column-type: nvarchar(100)
      required: false
      unique: true
      description: |
        Brand name
    priority:
      column: PRIORITY
      column-type: int(10)
      required: true
      unique: false
      description: |
        Priority order
    attachedRecords:
      column: ITEM_SEQ_SEQ
      column-type: int(10)
      required: false
      unique: true
      description: |
        Attached records: only for the Type=A2 & A3
    comment:
      column: COMMENT
      column-type: nvarchar(2147483647)
      required: false
      unique: true
      description: |
        Comment
params.food_table.NutrientListAndDefinition:
  namespace: params.food_table
  table: NUTRIENT
  secondaryKey:
  title: null
  icon: null
  description: |
    Nutrient list and definition
  fields:
    nutrientCode:
      column: NTR_CODE
      column-type: int(10)
      required: true
      unique: true
      description: |
        Nutrient code
    nutrientName:
      column: NTR_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Nutrient Name
    nutrientUnit:
      column: NTR_UNIT
      column-type: nvarchar(20)
      required: true
      unique: false
      description: |
        Nutrient unit (e.g. kcal, g, mg…)
    displayInTheNutrientChecksScreen:
      column: NTR_DISPLAY
      column-type: int(10)
      required: true
      unique: false
      enum: |
        0:No:not displayed in the 'nutrient checks' screen
        1:Yes:displayed in the 'nutrient checks' screen
      description: |
        0=not displayed in the 'nutrient checks' screen 
        1=displayed in the 'nutrient checks' screen
    commentOnNutrient:
      column: COMMENT
      column-type: nvarchar(2147483647)
      required: false
      unique: true
      description: |
        Comment on nutrient
params.food_table.NutrientValuesPerNutrientAndItem:
  namespace: params.food_table
  table: NTR_VALUE
  secondaryKey:
  title: null
  icon: null
  description: |
    Nutrient values per nutrient and item
  fields:
    itemSequentialNumber:
      column: SEQ
      column-type: int(10)
      required: true
      unique: false
      description: |
        Item Sequential number
    nutrientCode:
      column: NTR_CODE
      column-type: int(10)
      required: true
      unique: false
      description: |
        Nutrient code
    nutrientValueForTheAttachedItemAndNutrient:
      column: VAL
      column-type: float(53)
      required: true
      unique: false
      description: |
        Nutrient value for the attached item & nutrient
params.general_info.AnthropometricAverage:
  namespace: params.general_info
  table: ANTHROP
  secondaryKey:
  title: null
  icon: ruler
  description: |
    Average for anthropometric values (height, weight)
  fields:
    anthropometryVariable:
      column: ANT_VAR
      column-type: nvarchar(15)
      required: true
      unique: false
      description: |
        Anthropometry variable (Height or Weight)
    sex:
      column: SEX
      column-type: tinyint(3)
      required: false
      unique: false
      description: |
        Sex (1 for men, 2 for women, blank for both)
    ageMinimumRange:
      column: AGE_MIN
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        Age minimum range
    ageMaximumRange:
      column: AGE_MAX
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        Age maximum range
    minimumValueOfHeightOrWeight:
      column: ANT_MIN
      column-type: smallint(5)
      required: true
      unique: false
      description: |
        Minimum value of height or weight
    maximumValueOfHeightOrWeight:
      column: ANT_MAX
      column-type: smallint(5)
      required: true
      unique: false
      description: |
        Maximum value of height or weight
    defaultValueOfHeightOrWeight:
      column: ANT_DEF
      column-type: smallint(5)
      required: true
      unique: false
      description: |
        Default value of height or weight
params.general_info.FoodConsumptionOccasion:
  namespace: params.general_info
  table: FCO
  secondaryKey: |
    FCM_CODE
  title: String.format("%s (code=%s)", textDisplayedOnScreen, code)
  icon: solid user-clock
  description: |
    Food Consumption Occasion
  fields:
    code:
      column: FCM_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Food Consumption Occasion code
    textDisplayedOnScreen:
      column: FCM_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        FCO long label (text displayed on screen)
    mode:
      column: FCM_MODE
      column-type: nvarchar(1)
      required: true
      unique: false
      description: |
        FCO type: if =1 the FCO can be selected several times (e.g. During morning)
    shortLabelToIdentifyEasily:
      column: FCM_SNAME
      column-type: nvarchar(50)
      required: true
      unique: true
      description: |
        FCO short label to identify easily the FCO
    displayInNutrientCheckScreenQ:
      column: FCM_PRINCIPAL
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:secondary:non main FCO
        1:primary:main FCO (to be displayed in nutrient check screen)
      description: |
        0=non main FCO
        1=main FCO (to be displayed in nutrient check screen)
params.general_info.FoodConsumptionOccasionDisplayItem:
  namespace: params.general_info
  table: CHKLIST
  secondaryKey:
  title: String.format("%s", text)
  icon: regular message
  description: |
    List of foods often eaten at each food consumption occasion. 
    During the quick list step, this list will appear as a reminder 
    or a help to the interviewer when a food consumption occasion (FCO) is proposed 
    (before choosing a FCO and after filling in a FCO quick list).
  fields:
    foodConsumptionOccasionCode:
      column: FCO_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        FCO.FCM_CODE
      description: |
        Food Consumption Occasion code
    text:
      column: TEXT
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Text representing Food.
params.general_info.PlaceOfConsumption:
  namespace: params.general_info
  table: POC
  secondaryKey: |
    POC_CODE
  title: String.format("%s (code=%s)", name, code)
  icon: solid building-user
  description: |
    Place of Consumption
  fields:
    code:
      column: POC_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Place of consumption code
    name:
      column: POC_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Place of consumption name
    otherPlaceQ:
      column: POC_OTHER
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:specific:not a 'Other' place
        1:other:'Other' place
      description: |
        0=not a 'Other' place 
        1='Other' place
params.general_info.SpecialDayPredefinedAnswer:
  namespace: params.general_info
  table: SPECDAY
  secondaryKey:
  title: null
  icon: null
  description: |
    Special day predefined answer
  fields:
    specialDayCode:
      column: SPY_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Special day code
    specialDayLabel:
      column: SPY_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Special day label
params.general_info.SpecialDietPredefinedAnswer:
  namespace: params.general_info
  table: SPECDIET
  secondaryKey:
  title: null
  icon: null
  description: |
    Special diet predefined answer
  fields:
    specialDietCode:
      column: SPD_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Special diet code
    specialDietLabel:
      column: SPD_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Special diet label
params.general_info.TranslationInCountryLanguage:
  namespace: params.general_info
  table: EPICTEXT
  secondaryKey:
  title: null
  icon: null
  description: |
    Translation in country language
  fields:
    textName:
      column: ARRAY_REF
      column-type: nvarchar(19)
      required: true
      unique: true
      description: |
        Text name
    textInSpecificCountryLanguage:
      column: TEXT
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Text in specific Country language
    textInEnglish:
      column: TEXT_ENG
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Text in English
    dataEntryTextInSpecificCountryLanguage:
      column: DE_TEXT
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Data entry Text in specific Country language
    dataEntryTextInEnglish:
      column: DE_TEXT_ENG
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Data entry Text in English
params.interview.CenterInvolved:
  namespace: params.interview
  table: CENTERS
  secondaryKey: |
    CNTR_CODE
  title: String.format("%s", centerName)
  icon: building .default-color
  description: |
    Center involved
  fields:
    centerCode:
      column: CNTR_CODE
      column-type: nvarchar(3)
      required: true
      unique: true
      description: |
        Center code
    attachedCountryCode:
      column: CTRYCODE
      column-type: nvarchar(3)
      required: true
      unique: false
      foreignKeys: |
        COUNTRY.CTRYCODE
      description: |
        Attached Country code
    centerName:
      column: CNTR_NAME
      column-type: nvarchar(50)
      required: true
      unique: true
      description: |
        Center name
params.interview.CountryInvolved:
  namespace: params.interview
  table: COUNTRY
  secondaryKey: |
    CTRYCODE
  title: String.format("%s", countryName)
  icon: earth-europe
  description: |
    Country involved
  fields:
    countryCode:
      column: CTRYCODE
      column-type: nvarchar(3)
      required: true
      unique: true
      description: |
        Country code
    countryName:
      column: CTRY_NAME
      column-type: nvarchar(50)
      required: true
      unique: true
      description: |
        Country name
params.interview.Interviewer:
  namespace: params.interview
  table: INTVIEWR
  secondaryKey:
  title: String.format("%s, %s (code=%s)", interviewerFamilyName, interviewerName, interviewerCode)
  icon: solid user
  description: |
    Interviewer
  fields:
    interviewerCode:
      column: INTV_CODE
      column-type: nvarchar(20)
      required: true
      unique: true
      description: |
        Interviewer code
    interviewerFamilyName:
      column: INTV_FNAME
      column-type: nvarchar(100)
      required: false
      unique: true
      description: |
        Interviewer family name
    interviewerName:
      column: INTV_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Interviewer name
    countryCode:
      column: COUNTRY
      column-type: nvarchar(3)
      required: true
      unique: false
      foreignKeys: |
        COUNTRY.CTRYCODE
      description: |
        Country code
    centerCode:
      column: CENTER
      column-type: nvarchar(3)
      required: true
      unique: false
      foreignKeys: |
        CENTERS.CNTR_CODE
      description: |
        Center code
params.interview.SubjectToBeInterviewed:
  namespace: params.interview
  table: SUBJECTS
  secondaryKey:
  title: String.format("%s, %s (code=%s)", subjectName, subjectFirstName, subjectCode)
  icon: solid person-circle-question
  description: |
    Subjects to be interviewed
  fields:
    interviewNumber:
      column: INT_NUM
      column-type: smallint(5)
      required: false
      unique: false
      description: |
        Interview number
    subjectBirthDate:
      column: PAT_BDATE
      column-type: datetime(23)
      required: false
      unique: false
      description: |
        Subject birth date
    subjectCode:
      column: PAT_CODE
      column-type: nvarchar(20)
      required: false
      unique: true
      description: |
        Subject code
    subjectFirstName:
      column: PAT_FNAME
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Subject first name
    subjectHeightInCm:
      column: PAT_HEIGHT
      column-type: float(53)
      required: false
      unique: false
      description: |
        Subject height in cm
    subjectName:
      column: PAT_NAME
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Subject name
    subjectSex:
      column: PAT_SEX
      column-type: nvarchar(1)
      required: false
      unique: false
      enum: |
        1:male
        2:female
      description: |
        Subject sex (1=man, 2=woman)
    subjectWeightInKg:
      column: PAT_WEIGHT
      column-type: float(53)
      required: false
      unique: false
      description: |
        Subject weight in kg
    doneQ:
      column: DONE
      column-type: tinyint(3)
      required: false
      unique: false
      enum: |
        0:pending
        1:done
      description: |
        0=interview to be done,
        1=interview done
    countryCode:
      column: COUNTRY
      column-type: nvarchar(3)
      required: false
      unique: true
      foreignKeys: |
        COUNTRY.CTRYCODE
      description: |
        Country code
    centerCode:
      column: CENTER
      column-type: nvarchar(3)
      required: false
      unique: true
      foreignKeys: |
        CENTERS.CNTR_CODE
      description: |
        Center code
    interviewerCountryCode:
      column: INTV_COUNTRY
      column-type: nvarchar(3)
      required: false
      unique: false
      description: |
        Interviewer Country code
    interviewerCenterCode:
      column: INTV_CENTER
      column-type: nvarchar(3)
      required: false
      unique: false
      description: |
        Interviewer Center code
    interviewerCode:
      column: INTV_CODE
      column-type: nvarchar(20)
      required: false
      unique: false
      description: |
        Interviewer code
    recallDate:
      column: DATE_REC
      column-type: datetime(23)
      required: false
      unique: true
      description: |
        Recall Date (mm/dd/yy)
params.probing.ProbingQuestion:
  namespace: params.probing
  table: PROBQUE
  secondaryKey: |
    PQ_CODE
  title: String.format("%s (code=%s)", label, code)
  icon: solid circle-question
  description: |
    Probing question
  fields:
    code:
      column: PQ_CODE
      column-type: nvarchar(3)
      required: true
      unique: true
      description: |
        Probing question code
    label:
      column: PQ_TEXT
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Probing question label
params.quantif.HouseholdMeasure:
  namespace: params.quantif
  table: M_HHM
  secondaryKey:
  title: null
  icon: null
  description: |
    Household Measure
  fields:
    code:
      column: HHM_CODE
      column-type: nvarchar(4)
      required: true
      unique: true
      description: |
        HouseholdMeasure code
    volumeInCm3:
      column: HHM_VOLUME
      column-type: float(53)
      required: true
      unique: false
      description: |
        HouseholdMeasure volume in cm3.
    fractions:
      column: HHM_FRACT
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        HouseholdMeasure fractions ( 1/4,2/3,...), specified in a text field separated by commas. 
        The value of each expression will be evaluated as factor of the total volume
    comment:
      column: COMMENT
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Comment attached to the HouseholdMeasure
    displayOrder:
      column: D_ORDER
      column-type: float(53)
      required: true
      unique: true
      description: |
        Order to display the HouseholdMeasure
params.quantif.PhotoForQuantity:
  namespace: params.quantif
  table: M_PHOTOS
  secondaryKey: |
    PH_CODE
  title: null
  icon: null
  description: |
    Photo and its quantities
  fields:
    code:
      column: PH_CODE
      column-type: nvarchar(4)
      required: true
      unique: true
      description: |
        Photo series code (P001,P002,P003,...)
    quantificationStringThatDefinesTheQuantitiesOfEachPhotos:
      column: PH_QSTR
      column-type: nvarchar(2147483647)
      required: true
      unique: false
      description: |
        Quantification string that defines the quantities of each photos (e.g. 1-70,2-141,3-228,4-304,5-405,6-507)
    rawOrCooked:
      column: RAW_COOKED
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:raw
        2:cooked:as estimated
      description: |
        1 = raw, 
        2 = cooked (as estimated)
    withUnediblePartQ:
      column: EDIB
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:un-edible excluded:without un-edible part
        2:un-edible included:with un-edible (as estimated)
      description: |
        1 = without un-edible part, 
        2 = with un-edible (as estimated)
    unit:
      column: PH_UNIT
      column-type: nvarchar(1)
      required: true
      unique: false
      description: |
        G = in grams, V = in ml (volume)
params.quantif.Shape:
  namespace: params.quantif
  table: M_SHAPES
  secondaryKey: |
    SH_CODE
  title: null
  icon: null
  description: |
    Shape
  fields:
    shapeCode:
      column: SH_CODE
      column-type: nvarchar(5)
      required: true
      unique: true
      description: |
        Shape code (e.g. S001,S002,S003,...)
    shapeSurfaceInCm2:
      column: SH_SURFACE
      column-type: float(53)
      required: true
      unique: false
      description: |
        Shape surface in cm2 (e.g. 200cm2). 2 decimals can be possible
    commentAttachedToTheShape:
      column: SH_COMMENT
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Comment attached to the shape (e.g. oval bread small or oval bread medium or oval bread large…)
    orderToDisplayTheStandardUnit:
      column: SH_ORDER
      column-type: tinyint(3)
      required: true
      unique: true
      description: |
        Order to display the standard unit
params.quantif.StandardUnitForFoodOrRecipe:
  namespace: params.quantif
  table: M_STDUTS
  secondaryKey:
  title: null
  icon: null
  description: |
    standard units for foods and recipes
  fields:
    standardUnitQuantity:
      column: STDU_QUANT
      column-type: float(53)
      required: true
      unique: false
      description: |
        Standard unit quantity
    foodOrRecipeCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
        MIXEDREC.R_IDNUM
      description: |
        Food or Recipe identification number (code)
    rawOrCooked:
      column: RAW_COOKED
      column-type: nvarchar(1)
      required: false
      unique: false
      enum: |
        1:raw
        2:cooked:cooked as estimated
      description: |
        1 = raw, 
        2 = cooked (as estimated)
    withUnediblePartQ:
      column: EDIB
      column-type: nvarchar(1)
      required: false
      unique: false
      enum: |
        1:un-edible excluded:without un-edible part
        2:un-edible included:with un-edible (as estimated)
      description: |
        1 = without un-edible part, 
        2 = with un-edible (as estimated)
    type:
      column: TYPE
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:Food
        2:Recipe
      description: |
        1 = STDU for food, 
        2 = STDU for recipe
    commentAttachedToTheStandardUnit:
      column: COMMENT
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Comment attached to the standard unit
    standardUnitCode:
      column: UNIT_CODE
      column-type: nvarchar(4)
      required: true
      unique: false
      description: |
        Standard unit code for the same food/recipe (0001, 0002, 0003)
    unit:
      column: STDU_UNIT
      column-type: nvarchar(1)
      required: true
      unique: false
      description: |
        G = in grams, 
        V = in ml (volume)
    orderToDisplayTheStandardUnit:
      column: D_ORDER
      column-type: float(53)
      required: true
      unique: false
      description: |
        Order to display the standard unit
params.quantif.ThicknessForShapeMethod:
  namespace: params.quantif
  table: THICKNESS
  secondaryKey: |
    TH_CODE
  title: String.format("%f (code=%s)", thickness)
  icon: null
  description: |
    Thickness for shape method
  fields:
    code:
      column: TH_CODE
      column-type: nvarchar(10)
      required: true
      unique: true
      description: |
        Thickness code (e.g. A,B,C,58_1,58_2...)
    thickness:
      column: TH_THICK
      column-type: float(53)
      required: true
      unique: false
      description:
    comment:
      column: TH_COMMENT
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Comment attached to the thickness (e.g. small, medium, large…)
    foodSubgroupsLookupKey:
      column: TH_FDCLASS
      column-type: nvarchar(100)
      required: true
      unique: false
      plural: true
      foreignKeys: |
        SUBGROUP.GROUP
        SUBGROUP.SUBGROUP1
        SUBGROUP.SUBGROUP2
      description: |
        For the food items, the food (sub)groups for which this thickness has to be proposed. 
        These (sub)groups have to be separated with a comma (e.g. 0603,1002,1003,1101) 
        When this field is empty, that means that this thickness has always to be proposed
        whatever the food classification. multiple subgroup.group and/or subgroup.subgroup1 
        and/or subgroup.subgroup2 commaseparated (e.g. 0603,10,1102)
    recipeSubgroupsLookupKey:
      column: TH_RCPCLASS
      column-type: nvarchar(100)
      required: false
      unique: false
      plural: true
      foreignKeys: |
        RSUBGR.GROUP
        RSUBGR.SUBGROUP
      description: |
        For the recipe items, the recipe (sub)groups for which this thickness has to be proposed.
        These (sub)groups have to be separated with a comma (e.g. 01,02,0301)
        When this field is empty, that means that this thickness has always to be proposed 
        whatever the recipe classification; muliple rsubgr.group and/or rsubgr.subgroup commaseparated (e.g. 01,0601)
params.recipe_coefficient.PercentOfFatOrSauceOrSweetenerAddedAfterCookingForRecipe:
  namespace: params.recipe_coefficient
  table: SPFACORE
  secondaryKey:
  title: null
  icon: solid percent
  description: |
    % of fat/sauce/sweeteners added after cooking attached to a recipe
  fields:
    recipeGroupCode:
      column: RECI_GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe group code
    recipeSubgroupCode:
      column: RECI_SUBGR
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        RECI_GROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Recipe subgroup code
    recipeCode:
      column: RECI_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        MIXEDREC.R_IDNUM
      description: |
        Recipe code
    fssFatGroupCode:
      column: X_GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Fat group code for Fat or Sauce or Sweetener
    fssFatSubgroupCode:
      column: X_SUBG1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        X_GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Fat subgroup code for Fat or Sauce or Sweetener
    fssFatSubSubgroupCode:
      column: X_SUBG2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        X_GROUP
        X_SUBG1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Fat sub-subgroup code for Fat or Sauce or Sweetener
    fssFatCode:
      column: X_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Fat code for Fat or Sauce or Sweetener
    percentageOfFat:
      column: PCT_ADDED
      column-type: float(53)
      required: true
      unique: false
      description: |
        Percentage of fat
params.recipe_description.BrandForRecipe:
  namespace: params.recipe_description
  table: R_BRAND
  secondaryKey:
  title: String.format("%s (code=%s|%s)", recipeName, recipeGroupCode, recipeSubgroupCode)
  icon: brands shopify .brand-color
  description: |
    Brandname list for mixed recipes
  fields:
    recipeGroupCode:
      column: RGROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe group
    recipeSubgroupCode:
      column: RSUBGROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        RGROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Recipe subgroup
    recipeName:
      column: RNAME
      column-type: nvarchar(100)
      required: true
      unique: false
      description:
params.recipe_description.FacetDescriptorPathwayForRecipe:
  namespace: params.recipe_description
  table: R_RCPFAEX
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .recipe-color,
    solid tag .recipe-color .ov-size-60 .ov-right-50 .ov-bottom-85,
    solid exclamation-circle .recipe-color-em .ov-size-60 .ov-left-50 .ov-bottom-85
    
  description: |
    Facet/descriptor pathway for individual recipe.
    Supersedes this Recipe's group facet/descriptor pathway from @{table R_GROUPFAC}.
  fields:
    recipeCode:
      column: R_IDNUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        MIXEDREC.R_IDNUM
      description: |
        Recipe ID number
    recipeFacetCode:
      column: RFACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        R_FACET.RFACET_CODE
      description: |
        Recipe Facet codes that will appear in the sequence of facets corresponding to this Recipe 
        (supersedes this Recipe's group pathway). 
        The list of descriptors will be the ones defined for the subgroup in @{table R_GROUPFAC}.
    order:
      column: ORDER_FAC
      column-type: int(10)
      required: true
      unique: false
      description:
params.recipe_description.FacetDescriptorPathwayForRecipeGroup:
  namespace: params.recipe_description
  table: R_GROUPFAC
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .recipe-color,
    solid tag .recipe-color .ov-size-60 .ov-right-50 .ov-bottom-85
    
  description: |
    Facet/descriptor pathway for recipe group/subgroup.
    Optionally can be superseded by @{table R_RCPFAEX}.
  fields:
    recipeGroupCode:
      column: RGROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe group code
    recipeSubgroupCode:
      column: RSUBGROUP
      column-type: nvarchar(2)
      required: false
      unique: true
      discriminator: |
        RGROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Recipe Subgroup code
    recipeFacetCode:
      column: RFACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        R_FACET.RFACET_CODE
      description: |
        Recipe Facet code
    recipeDescriptorCode:
      column: RDESCR_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      discriminator: |
        RFACET_CODE
      foreignKeys: |
        R_DESCFACE.RDESCR_CODE
      description: |
        Recipe Descriptor code
    defaultFlagQ:
      column: RDEFAULT
      column-type: nvarchar(2)
      required: false
      unique: false
      description: |
        Default flag (if set to 'D', it is the default descriptor else blank)
    notInNameQ:
      column: RNOTINNAME
      column-type: nvarchar(2)
      required: false
      unique: false
      description: |
        Not in name flag (if set to 'N', the descriptor is not in the name else blank)
    facetDisplayOrder:
      column: ORDER_FAC
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        Order to display the facets within a group/subgroup
    descriptorDisplayOrder:
      column: ORDER_DESC
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        Order to display the descriptors within a group/subgroup and a facet
params.recipe_description.RecipeDescriptor:
  namespace: params.recipe_description
  table: R_DESCFACE
  secondaryKey: |
    RFACET_CODE
    RDESCR_CODE
  title: String.format("%s (code=%s|%s)", name, recipeFacetCode, code)
  icon: |
    solid stroopwafel .recipe-color,
    solid tag .recipe-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Descriptor per facet
  fields:
    recipeFacetCode:
      column: RFACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        R_FACET.RFACET_CODE
      description: |
        Facet code for recipes
    code:
      column: RDESCR_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      description: |
        Descriptor code for recipes
    name:
      column: RDESCR_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Descriptor name
    homemadeOrNot:
      column: RDESCR_TYPE
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:not homemade
        1:Homemade
      description: |
        Only for facet recipe production: 
        0=not homemade descriptor 
        1=Homemade descriptor
    knownOrUnknown:
      column: RDESCR_KNOWN
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:does not apply:Not a facet
        1:Facet unknown
        2:Facet known
      description: |
        Only for facet known/unknown: 1=unknown 2=known
    yesOrNo:
      column: RDESCR_OTHER
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:no
        1:yes
      description: |
        Descriptor with type='other' : 1=yes 0=no
    singleOrNot:
      column: RDESCR_SINGLE
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:not single descriptor
        1:single descriptor
      description: |
        0=not single descriptor
        1=single descriptor          
params.recipe_description.RecipeFacet:
  namespace: params.recipe_description
  table: R_FACET
  secondaryKey: |
    RFACET_CODE
  title: String.format("%s (code=%s)", name, code)
  icon: |
    solid stroopwafel .recipe-color,
    solid swatchbook .recipe-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Facet for Recipe 
  fields:
    code:
      column: RFACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Facet code for recipes
    name:
      column: RFACET_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Facet name
    textToShowOnTheScreenDescribingTheFacet:
      column: RFACET_TEXT
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Facet text (text to show on the screen describing the facet)
    descriptorsAvailableForRecipeOrBrandQ:
      column: RFACET_TYPE
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:Standard:Standard facets with descriptors available in R_Descface table
        1:Brand:Facets with descriptors available in RBrand table
      description: |
        0=Standard facets with descriptors available in R_Descface table
        1=Facets with descriptors available in RBrand table
    singleOrMultiSelectDescriptorQ:
      column: RFACET_TYPE_S
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:single:facet with single-selection of descriptor
        1:multi:facets with multi-selection of descriptors
      description: |
        0 = facet with single-selection of descriptor 
        1 = facets with multi-selection of descriptors
    standardOrMainFacetQ:
      column: RFACET_MAIN
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:Standard
        1:Main: facet (with non modified descriptor)
      description: |
        0 = standard facet 
        1 = Main facet (with non modified descriptor)
    labelOnHowToAskTheFacetQuestion:
      column: RFACET_QUEST
      column-type: nvarchar(300)
      required: true
      unique: true
      description: |
        Label on how to ask the facet question    
params.recipe_description.RuleAppliedToFacets:
  namespace: params.recipe_description
  table: R_FACETRUL
  secondaryKey:
  title: null
  icon: null
  description: |
    Rule applied to facets 
  fields:
    facetWhereTheRuleMustBeApplied:
      column: RFACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        FACETS.FACET_CODE
      description: |
        Facet where the rule must be applied.
    matchOnPreviouslySelectedFacetDescriptorBySubject:
      column: R_FACDESC
      column-type: nvarchar(4)
      required: true
      unique: true
      description: |
        Rule: Facet (facet_code) will be displayed only if descriptor in facdesc 
        is previously selected by the subject according or not to a food classification (group/subgroup1/subgroup2). 
        - When a group/subgroup1/subgroup2 is specified, the rule is applied only for these 3 levels of classification (e.g. 070101 only for foods from beef classification).
        - When a group/subgroup1 is specified, the rule is applied for all the foods attached to these 2 or 3 levels of classification (e.g. 0701 so for foods classified under 070100, 070101, 070102, 070103, 070104, 070105 & 070106).
        - When a group is specified, the rule is applied for all the foods attached to these 1, 2 or 3 levels of classification (e.g. 06 so for foods classified under 0601, 0602, 0603, 0604, 0605,  0606 and also for 060300, 060301 & 060302).
        - When the group/subgroup1/subgroup2 is not specified (null values), the rule is applied to all foods, whatever its classification.
    recipeGroupCode:
      column: RGROUP
      column-type: nvarchar(2)
      required: false
      unique: true
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe Group code
    recipeSubgroupCode:
      column: RSUBGROUP
      column-type: nvarchar(2)
      required: false
      unique: true
      discriminator: |
        RGROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Recipe Subgroup code
params.recipe_list.Recipe:
  namespace: params.recipe_list
  table: MIXEDREC
  secondaryKey: |
    R_IDNUM
  title: String.format("%s (code=%s)", name, code)
  icon: solid stroopwafel .recipe-color
  description: |
    Mixed (a priory) Recipe (not an on-the-fly one):
    After preparation, the different ingredients cannot be identified 
    and quantified separately, as those are derived from cook books (for homemade and similar recipes), 
    internet or are based on information received from the industry (for commercial recipes). 
    They are entered as standard recipes with the RECIPE MANAGER and handled at the country level 
    prior to the commencement of the interviews. 
    The mixed recipe database may contain three types of recipes: 
    1) ‘open recipes’, 
    2) ‘closed recipes’ and 
    3) ‘strictly commercial with brand recipes’.
    For each mixed recipe, information on the expected variation of ingredients 
    within the study population needs to be collected, too. 
    If the variation is found to be great, the recipe should be treated as an open recipe. 
    It is also possible to enter several standard variations of a recipe depending on regions. 
    If no variations are expected, a recipe should be treated as a closed recipe 
    or as a strictly commercial recipe. 
    Furthermore, it has to be decided if each ingredient is fixed or substitutable. 
    When entering the recipe ingredients with RECIPE MANAGER, 
    the ingredients are described and quantified like in the food pathway.
  fields:
    code:
      column: R_IDNUM
      column-type: nvarchar(5)
      required: true
      unique: true
      description: |
        Recipe ID number
    recipeGroupCode:
      column: R_GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Group code of the recipe classification
    recipeSubgroupCode:
      column: R_SUBGROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        R_GROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Subgroup code of the recipe classification
    name:
      column: R_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Recipe name
    recipeType:
      column: R_TYPE
      column-type: nvarchar(3)
      required: true
      unique: false
      enum: |
        1.1:Open – Known
        1.2:Open – Unknown
        1.3:Open with brand
        2.1:Closed
        2.2:Closed with brand
        3.0:Commercial
        4.1:New – Known
        4.2:New – Unknown
      description: |
        Type of recipe: 
        1.1=Open – Known 
        1.2=Open – Unknown 
        1.3=Open with brand 
        2.1=Closed 
        2.2=Closed with brand 
        3.0=Commercial 
        4.1=New – Known 
        4.2=New – Unknown
    brandNameForCommercialRecipe:
      column: R_BRAND
      column-type: nvarchar(100)
      required: false
      unique: true
      description: |
        Brand name for commercial recipe
    aliasQ:
      column: TYPE
      column-type: nvarchar(2)
      required: false
      unique: true
      enum: |
        :regular:is regular entry
        :alias:is alias entry
      description: |
        whether is an alias (SH=shadow)
    hasSubRecipeQ:
      column: R_SUB
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:sub-recipe excluded:recipe without sub-recipe
        1:sub-recipe included:recipe with sub-recipe
      description: |
        0=recipe without sub-recipe 
        1=recipe with sub-recipe
    status:
      column: STATUS
      column-type: nvarchar(1)
      required: true
      unique: false
      description:
params.recipe_list.RecipeIngredient:
  namespace: params.recipe_list
  table: MIXEDING
  secondaryKey:
  title: null
  icon: null
  description: |
    Mixed recipes: Ingredients description/quantification
  fields:
    recipeCode:
      column: R_IDNUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        MIXEDREC.R_IDNUM
      description: |
        Recipe ID number the ingredient belongs to
    substitutable:
      column: ING_TYPE
      column-type: nvarchar(2)
      required: true
      unique: false
      enum: |
        1:ingredient fixed
        2:ingredient substitutable
        3:fat during cooking
        A2:type of fat used
        A3:type of milk/liquid used
      description: |
        1 = ingredient fixed
        2 = ingredient substitutable
        3 = fat during cooking
        A2 = type of fat used
        A3 = type of milk/liquid used
    foodType:
      column: TYPE
      column-type: nvarchar(2)
      required: false
      unique: false
      description: |
        Food type (GI or blank)
    descriptionText:
      column: TEXT
      column-type: nvarchar(2147483647)
      required: false
      unique: false
      description: |
        Description text (facet/descriptor text)
    name:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Ingredient name
    foodOrRecipeGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        GROUPS.GROUP
        RGROUPS.GROUP
      description: |
        Ingredient food or recipe group
    foodOrRecipeSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: true
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
        RSUBGR.SUBGROUP
      description: |
        Ingredient food or recipe subgroup
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Ingredient food sub-subgroup
    brandName:
      column: BRANDNAME
      column-type: nvarchar(100)
      required: false
      unique: true
      description: |
        Ingredient brand (if any)
    facetDescriptorsLookupKey:
      column: FACETS_STR
      column-type: nvarchar(2147483647)
      required: false
      unique: false
      plural: true
      foreignKeys: |
        DESCFACE.FACET_CODE
        DESCFACE.DESCR_CODE
      description: |
        Facets-Descriptors codes used to describe the ingredient; 
        multiple (descface.facet_code + descface.descr_code) comma separated (e.g. 0401,0203,051)
    describedAndQuantifiedQ:
      column: STATUS
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:ingredient described and quantified
        2:otherwise
      description: |
        1 = ingredient described and quantified 
        2 = otherwise
    finalQuantityInG:
      column: CONS_QTY
      column-type: float(53)
      required: true
      unique: false
      description: |
        Final quantity in g (with coefficient applied)
    estimatedQuantityBeforeCoefficientApplied:
      column: ESTIM_QTY
      column-type: float(53)
      required: true
      unique: false
      description: |
        Estimated quantity (before coefficient applied)
    quantityEstimatedRawOrCooked:
      column: RAWCOOKED
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:Raw
        2:Cooked or Not applicable
      description: |
        Quantity Estimated Raw or Cooked 
        1 = Raw 
        2 = Cooked or Not applicable
    quantityConsumedRawOrCooked:
      column: CONSRAWCO
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:Raw
        2:Cooked or Not applicable
      description: |
        Quantity Consumed Raw or Cooked 
        1 = Raw 
        2 = Cooked or Not applicable
    conversionFactorRawToCooked:
      column: CONVER
      column-type: float(53)
      required: true
      unique: false
      description: |
        Conversion factor raw->cooked
    withUnediblePartQ:
      column: EDIB
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:un-edible excluded
        2:un-edible included
      description: |
        Quantity as estimated: 1=without un-edible part & 2=with un-edible part
    conversionFactorForEdiblePart:
      column: EDIB_CSTE
      column-type: float(53)
      required: true
      unique: false
      description: |
        Conversion factor for edible part
    quantityInGramPerVolumeAttachedToTheSelectedPhotoOrHHMOrSTDU:
      column: NGRAMS
      column-type: float(53)
      required: true
      unique: false
      description: |
        Quantity in gram/volume attached to the selected Photo, HHM, STDU
    proportionOfPhotoHHMSTDU:
      column: PROPORT
      column-type: nvarchar(5)
      required: true
      unique: false
      description: |
        Proportion of Photo, HHM, STDU
    typeOfQuantificationMethod:
      column: Q_METHOD
      column-type: nvarchar(1)
      required: false
      unique: false
      description: |
        Type of quantification method
    quantificationMethodCode:
      column: QM_CODE
      column-type: nvarchar(4)
      required: false
      unique: false
      description: |
        Quantification method code
    densityCoefficientOnlyForHHM:
      column: DENSITY
      column-type: float(53)
      required: true
      unique: false
      description: |
        Density Coefficient only for HHM
    sequentialNumberForIngredientsWithinARecipe:
      column: ING_NUM
      column-type: float(53)
      required: true
      unique: false
      description: |
        Sequential Number for Ingredients within a Mixed Recipe 
    fatLeftOverPercentage:
      column: FATL_PCT
      column-type: float(53)
      required: true
      unique: false
      description: |
        Fat Left-Over Percentage
    fatLeftOverQ:
      column: FATLEFTO
      column-type: bit(1)
      required: true
      unique: false
      description: |
        Fat Left-Over Code (F=False, T=True)
    hhmFraction:
      column: HHMFRACT
      column-type: nvarchar(5)
      required: false
      unique: false
      description: |
        HHM Fraction
    consumedQuantityInPound:
      column: POUND
      column-type: float(53)
      required: true
      unique: false
      description: |
        Consumed quantity in pound
    consumedQuantityInOunce:
      column: OUNCE
      column-type: float(53)
      required: true
      unique: false
      description: |
        Consumed quantity in ounce
    consumedQuantityInQuart:
      column: QUART
      column-type: float(53)
      required: true
      unique: false
      description: |
        Consumed quantity in quart
    consumedQuantityInPint:
      column: PINT
      column-type: float(53)
      required: true
      unique: false
      description: |
        Consumed quantity in pint
    consumedQuantityInFlounce:
      column: FLOUNCE
      column-type: float(53)
      required: true
      unique: false
      description: |
        Consumed quantity in flounce
    sequentialNumberForIngredientsWithinASubRecipe:
      column: S_ING_NUM
      column-type: float(53)
      required: true
      unique: false
      description: |
        Sequential Number for Ingredients within a Sub-Recipe 
    rawQuantityWithoutInedible:
      column: RAW_Q
      column-type: float(53)
      required: true
      unique: false
      description: |
        Raw quantity without inedible (sans dechet)
    percentageOrProportionAsEstimatedForRecipeIngredients:
      column: PCT_ESTIM
      column-type: float(53)
      required: false
      unique: false
      description: |
        Percentage/Proportion as Estimated for Recipe Ingredients
    percentageOrProportionAsConsumedForRecipeIngredients:
      column: PCT_CONS
      column-type: float(53)
      required: false
      unique: false
      description: |
        Percentage/Proportion as Consumed for Recipe Ingredients
    typeOfItem:
      column: TYPE_IT
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        1:Food
        2:Recipe
      description: |
        1 = food 
        2 = recipe
    foodOrRecipeCode:
      column: IDNUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        FOODS.FOODNUM
        MIXEDREC.R_IDNUM
      description: |
        Ingredient Food or Recipe ID number; either Foods.foodnum OR Mixedrec.r_idnum
    unitOfSelectedQuantityForMethod:
      column: Q_UNIT
      column-type: nvarchar(1)
      required: false
      unique: false
      description: |
        Unit of selected quantity for method Photo, std U, std P (G=gram, V=volum) 
    percentageRaw:
      column: PCT_RAW
      column-type: float(53)
      required: false
      unique: true
      description:
params.recipe_list.RecipeIngredientQuantification:
  namespace: params.recipe_list
  table: MIXEDING_QT
  secondaryKey:
  title: null
  icon: null
  description: |
    Mixed recipes: Ingredients quantification for shape and photo methods
  fields:
    recipeCode:
      column: R_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      foreignKeys: |
        MIXEDREC.R_IDNUM
      description: |
        Recipe ID number the ingredient belong to
    sequentialNumberWithinARecipeForIngredient:
      column: ING_NUM
      column-type: float(53)
      required: false
      unique: true
      description: |
        Sequential Number within a Mixed Recipe for Ingredient
    ingredientFoodOrRecipeCode:
      column: FOODNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      foreignKeys: |
        FOODS.FOODNUM
      description: |
        Ingredient Food or Recipe ID number
    orderOfShapeSelection:
      column: ORDER
      column-type: float(53)
      required: false
      unique: false
      description: |
        Order of shape selection (e.g. 1)
    shapeCode:
      column: SH_CODE
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        M_SHAPES.SH_CODE
      description: |
        Shape code (e.g. S001)
    shapeSurfaceInCm2:
      column: SH_SURFACE
      column-type: float(53)
      required: false
      unique: false
      description: |
        Shape surface in cm2 (e.g. 200cm2). 2 decimals
    shapeThicknessCode:
      column: TH_CODE
      column-type: nvarchar(10)
      required: false
      unique: false
      foreignKeys: |
        THICKNESS.TH_CODE
      description: |
        Shape: Thickness code (e.g. A or 58_1)
    thicknessInMm:
      column: TH_THICK
      column-type: float(53)
      required: false
      unique: false
      description: |
        Thickness in mm (e.g. 40mm, 0.05 mm). 5 decimals
    photoCode:
      column: PH_CODE
      column-type: nvarchar(4)
      required: false
      unique: false
      foreignKeys: |
        M_PHOTOS.PH_CODE
      description: |
        Photo: Number of the Selected Photo (e.g. 1 or 4)
    photoQuantity:
      column: PH_QTY
      column-type: float(53)
      required: false
      unique: false
      description: |
        Photo quantity
    shapeAndPhotoFractionOrUnit:
      column: FRACT
      column-type: nvarchar(5)
      required: false
      unique: false
      description: |
        Shape & Photo: Fraction or unit (e.g. 3/5 or 1 or 2)
    sequentialNumberForIngredientsWithinASubRecipe:
      column: S_ING_NUM
      column-type: float(53)
      required: false
      unique: true
      description: |
        Sequential Number for Ingredients within a Sub-Recipe
params.recipe_max.MaximumValueForARecipeOrGroup:
  namespace: params.recipe_max
  table: MAXRVAL
  secondaryKey:
  title: null
  icon: null
  description: |
    Maximum value for a recipe or a (sub-)group
  fields:
    recipeGroupCode:
      column: R_GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe group code
    recipeSubgroupCode:
      column: R_SUBGROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        R_GROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Recipe subgroup code
    recipeCode:
      column: R_IDNUM
      column-type: nvarchar(5)
      required: false
      unique: true
      foreignKeys: |
        MIXEDREC.R_IDNUM
      description: |
        Recipe code
    maximumValue:
      column: MAXIMA
      column-type: float(53)
      required: true
      unique: false
      description: |
        Maximum value
params.recipe_probing.ProbingQuestionPathwayForRecipe:
  namespace: params.recipe_probing
  table: RPQPATH
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .recipe-color,
    solid question .recipe-color .ov-size-60 .ov-right-50 .ov-bottom-85
    
  description: |
    Probing question pathway for recipe.
  fields:
    probingQuestionCode:
      column: PQ_CODE
      column-type: nvarchar(3)
      required: false
      unique: false
      foreignKeys: |
        PROBQUE.PQ_CODE
      description: |
        Probing question code
    recipeGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe group code
    recipeSubgroupCode:
      column: SUBGROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Recipe subgroup code
    recipeCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: false
      unique: false
      foreignKeys: |
        MIXEDREC.R_IDNUM
      description: |
        Recipe identification number (R_ IDNUM)
params.recipe_quantif.QuantificationMethodPathwayForRecipe:
  namespace: params.recipe_quantif
  table: QM_RECIP
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .recipe-color,
    solid scale-balanced .recipe-color .ov-size-60 .ov-right-50 .ov-bottom-85,
    solid exclamation-circle .recipe-color-em .ov-size-60 .ov-left-50 .ov-bottom-85
    
  description: |
    Quantification method pathway for individual recipe. 
    Supersedes this recipe's group quantification method pathway from @{table QM_RCLAS}.
  fields:
    recipeCode:
      column: ID_NUM
      column-type: nvarchar(5)
      required: true
      unique: false
      foreignKeys: |
        MIXEDREC.R_IDNUM
      description: |
        Recipe identification number (R_IDNUM)
    quantificationMethod:
      column: METHOD
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        P:Photo
        H:Household Measure
        U:Standard Unit
        A:Shape
      description: |
        Quantification method code:
        'P' for photo, 
        'H' for HHM, 
        'U' for stdu, 
        'A' Shape
    photoCode:
      column: METH_CODE
      column-type: nvarchar(4)
      required: false
      unique: false
      foreignKeys: |
        M_PHOTOS.PH_CODE
        M_SHAPES.SH_CODE
      description: |
        Photo code (if method='P' and 'A'); 
        either M_photos.ph_code or M_shapes.sh_code
params.recipe_quantif.QuantificationMethodPathwayForRecipeGroup:
  namespace: params.recipe_quantif
  table: QM_RCLAS
  secondaryKey:
  title: null
  icon: |
    solid person-walking-arrow-right .recipe-color,
    solid scale-balanced .recipe-color .ov-size-60 .ov-right-50 .ov-bottom-85
    
  description: |
    Quantification methods pathway for recipe group/subgroup.
    Optionally can be superseded by @{table QM_RECIP}.
  fields:
    recipeGroup:
      column: R_GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Recipe group
    quantificationMethod:
      column: METHOD
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        P:Photo
        H:Household Measure
        U:Standard Unit
        A:Shape
      description: |
        Quantification method code:
        'P' for photo, 
        'H' for HHM, 
        'U' for stdu,
        'A' for shape
    photoCode:
      column: METH_CODE
      column-type: nvarchar(4)
      required: false
      unique: false
      foreignKeys: |
        M_PHOTOS.PH_CODE
        M_SHAPES.SH_CODE
      description: |
        Photo code (if method='P' and 'A'); 
        either M_photos.ph_code or M_shapes.sh_code
    comment:
      column: COMMENT
      column-type: nvarchar(200)
      required: true
      unique: false
      description: |
        Comment
params.setting.DayOfWeek:
  namespace: params.setting
  table: DAYOWEEK
  secondaryKey:
  title: null
  icon: null
  description: |
    Day of week constant
  fields:
    dayNumber:
      column: DAYOFWEEK
      column-type: nvarchar(1)
      required: true
      unique: true
      description: |
        Day number
    dayName:
      column: DAY
      column-type: nvarchar(20)
      required: true
      unique: true
      description: |
        Day name
params.setting.FacetDescriptorThatCannotBeSubstituted:
  namespace: params.setting
  table: DESCSUBS
  secondaryKey:
  title: null
  icon: null
  description: |
    Facet/descriptor that cannot be substituted
  fields:
    facetCode:
      column: FACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        FACETS.FACET_CODE
      description: |
        Facet code
    descriptorCode:
      column: DESC_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      discriminator: |
        FACET_CODE
      foreignKeys: |
        DESCFACE.DESCR_CODE
      description: |
        Descriptor code
params.setting.GroupSubstitution:
  namespace: params.setting
  table: SUBSTIT
  secondaryKey:
  title: |
    String.format("For %s (code=%s|%s|%s)->(f:%s|r:%s)", 
     type.title(), 
     dita.commons.format.FormatUtils.emptyToDash(foodGroupCode), 
     dita.commons.format.FormatUtils.emptyToDash(foodSubgroupCode), 
     dita.commons.format.FormatUtils.emptyToDash(foodSubSubgroupCode),
     dita.commons.format.FormatUtils.emptyToDash(applyToFoodGroupsLookupKey),
     dita.commons.format.FormatUtils.emptyToDash(applyToRecipeGroupsLookupKey))
    
  icon: null
  description: |
    Group/subgroup that can be substituted
  fields:
    type:
      column: TYPE
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        0:Food
        1:Recipe
      description: |
        0=Food classification
        1=Recipe classification
    foodGroupCode:
      column: GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        GROUPS.GROUP
      description: |
        Food group code
    foodSubgroupCode:
      column: SUBGROUP1
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
      foreignKeys: |
        SUBGROUP.SUBGROUP1
      description: |
        Food subgroup code
    foodSubSubgroupCode:
      column: SUBGROUP2
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        GROUP
        SUBGROUP1
      foreignKeys: |
        SUBGROUP.SUBGROUP2
      description: |
        Food sub-Subgroup code
    applyToFoodGroupsLookupKey:
      column: F_CLASS
      column-type: nvarchar(100)
      required: false
      unique: false
      plural: true
      elementType: params.classification.FoodGrouping
      foreignKeys: |
        SUBGROUP.GROUP
        SUBGROUP.SUBGROUP1
        SUBGROUP.SUBGROUP2
      description: |
        List of food groups/subgroups to apply the substitution (e.g. “01”, “13,1602,0507,0508”)
    applyToRecipeGroupsLookupKey:
      column: R_CLASS
      column-type: nvarchar(100)
      required: false
      unique: false
      plural: true
      elementType: params.classification.RecipeGrouping
      foreignKeys: |
        RSUBGR.GROUP
        RSUBGR.SUBGROUP
      description: |
        List of recipe groups/subgroups to apply the substitution (e.g. “01”, “02, 0403, 0702”)
params.setting.MacroNutrientLimit:
  namespace: params.setting
  table: NUTLIMIT
  secondaryKey:
  title: null
  icon: null
  description: |
    Minimum and maximum value for macro-nutrient
  fields:
    nameOfNutrient:
      column: NAME
      column-type: nvarchar(50)
      required: true
      unique: false
      description: |
        Name of nutrient
    minimumValue:
      column: MIN
      column-type: float(53)
      required: true
      unique: false
      description: |
        Minimum value
    maximumValue:
      column: MAX
      column-type: float(53)
      required: true
      unique: false
      description: |
        Maximum value
    unit:
      column: UNIT
      column-type: nvarchar(50)
      required: false
      unique: false
      enum: |
        g:Grams
        Kcal:Kcal
      description: |
        Unit (g, kcal or blank)
    sex:
      column: SEX
      column-type: nvarchar(1)
      required: false
      unique: true
      enum: |
        1:male
        2:female
      description: |
        1=Man, 
        2=Woman
    palValue:
      column: VAL
      column-type: float(53)
      required: false
      unique: false
      description: |
        PAL value
params.setting.Month:
  namespace: params.setting
  table: MONTHS
  secondaryKey:
  title: null
  icon: null
  description:
  fields:
    monthNumber:
      column: MONTH_NUM
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Month number
    monthName:
      column: MONTH
      column-type: nvarchar(20)
      required: true
      unique: true
      description: |
        Month name
params.setting.NoteStatus:
  namespace: params.setting
  table: STATUS
  secondaryKey:
  title: null
  icon: null
  description: |
    Note status
  fields:
    statusCode:
      column: S_CODE
      column-type: nvarchar(3)
      required: true
      unique: true
      description: |
        Status code
    statusLabel:
      column: S_LABEL
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Status label
    displayNoteInTheViewNoteWindow:
      column: S_HIDE
      column-type: smallint(5)
      required: true
      unique: false
      enum: |
        0:Yes:don't hide hide
        1:No:hide: e.g. 1=hide for status “action done”
      description: |
        Allow the possibility to display or not the note in the view note window: 
        0=No hide, 
        1=Yes hide (e.g. 1=hide for status “action done”)
params.setting.RecipeTypePathway:
  namespace: params.setting
  table: RCP_PATH
  secondaryKey:
  title: null
  icon: solid person-walking-arrow-right .recipe-color
  description: |
    Definition of recipe pathway (available for each recipe type).
  fields:
    typeOfRecipe:
      column: R_TYPE
      column-type: nvarchar(3)
      required: true
      unique: true
      enum: |
        1.1:Open–Known
        1.2:Open–Unknown
        1.3:Open with brand
        2.1:Closed
        2.2:Closed with brand
        3.0:Commercial
        4.1:New–Known
        4.2:New–Unknown
      description: |
        Type of recipe: 
        1.1=Open – Known 
        1.2=Open – Unknown 
        1.3=Open with brand 
        2.1=Closed 
        2.2=Closed with brand 
        3.0=Commercial 
        4.1=New – Known 
        4.2=New – Unknown
    ingredientWindowIsDisplayedQ:
      column: R_ING
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:hidden:The ingredient window is not displayed
        1:displayed:The ingredient window is displayed
      description: |
        0 = The ingredient window is not displayed
        1 = The ingredient window is displayed 
    functionsAllocatedInNEWInterviewModeWhenTheIngredientWindowIsDisplayed:
      column: N_IFUNCTION
      column-type: tinyint(3)
      required: false
      unique: false
      enum: |
        1:S:Substitute
        2:SAD:Substitute, Add & Delete
        3:SADQ:Substitute, Add, Delete & Quantify
      description: |
        Functions allocated in NEW interview mode when the ingredient window is displayed (R_ING=1): 
        1 = S - Substitute 
        2 = SAD - Substitute, Add & Delete 
        3 = SADQ - Substitute, Add, Delete & Quantify
    functionsAllocatedInEDITInterviewModeWhenTheIngredientWindowIsDisplayed:
      column: E_IFUNCTION
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        1:S:Substitute
        2:SAD:Substitute, Add & Delete
        3:SADQ:Substitute, Add, Delete & Quantify
      description: |
        Functions allocated in EDIT interview mode when the ingredient window is displayed (R_ING=1): 
        1 = S - Substitute 
        2 = SAD - Substitute, Add & Delete 
        3 = SADQ - Substitute, Add, Delete & Quantify
    displayOfTheAutomaticNoteWindow:
      column: D_NOTES
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:hidden:No display of note window
        1:displayed:Display of note window
        2:displayed only for add/delete:Display of note window only for Add & Delete functions
      description: |
        Display of the automatic note window: 
        0 = No display of note window 
        1 = Display of note window 
        2 = Display of note window only for Add & Delete functions
params.setting.SelectedParameter:
  namespace: params.setting
  table: PARAM
  secondaryKey:
  title: null
  icon: null
  description: |
    Selected parameters
  fields:
    parameterCode:
      column: PARAM_LAB
      column-type: nvarchar(40)
      required: false
      unique: true
      description: |
        Parameter code
    parameterValue:
      column: PARAM_LIB
      column-type: nvarchar(100)
      required: false
      unique: false
      description: |
        Parameter value
params.setting.SelectedParameterForDataEntry:
  namespace: params.setting
  table: PARAMDE
  secondaryKey:
  title: null
  icon: null
  description: |
    Selected parameters for data entry
  fields:
    parameterCode:
      column: PARAM_LAB
      column-type: nvarchar(40)
      required: true
      unique: true
      description: |
        Parameter code for data entry
    parameterValue:
      column: PARAM_LIB
      column-type: nvarchar(100)
      required: true
      unique: false
      description: |
        Parameter value for data entry
params.supplement.DietarySupplement:
  namespace: params.supplement
  table: SUPPLEMENTS
  secondaryKey:
  title: String.format("%s (code=%s)", vitaminOrSupplementName, vitaminOrSupplementCode)
  icon: solid tablets .supplement-color
  description: |
    Dietary supplement
  fields:
    vitaminOrSupplementCode:
      column: CODE_VITA
      column-type: nvarchar(5)
      required: true
      unique: true
      description: |
        Vitamin/supplement code
    vitaminOrSupplementName:
      column: NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Vitamin/supplement name
    blankOrGIForGenericVitaminOrSupplement:
      column: TYPE
      column-type: nvarchar(2)
      required: false
      unique: false
      description: |
        Blank or 'GI' for generic vitamin/supplement
    classificationCode:
      column: DS_CLASS
      column-type: nvarchar(20)
      required: false
      unique: true
      foreignKeys: |
        DS_CLASSIF.DS_CLASS
      description: |
        Dietary Supplement classification code (optional)
    facetCode:
      column: DS_FACET
      column-type: nvarchar(100)
      required: true
      unique: false
      foreignKeys: |
        DS_FACET.DSFACET_CODE
      description: |
        Sequence of facet codes that indicates the facets to be displayed for this supplement (e.g. 03,04,01)
params.supplement.DietarySupplementClassification:
  namespace: params.supplement
  table: DS_CLASSIF
  secondaryKey: |
    DS_CLASS
  title: String.format("%s (code=%s)", name, code)
  icon: |
    solid tablets .supplement-color,
    solid layer-group .supplement-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Dietary supplement classification
  fields:
    code:
      column: DS_CLASS
      column-type: nvarchar(20)
      required: false
      unique: true
      description: |
        Dietary Supplement classification code
    name:
      column: NAME
      column-type: nvarchar(50)
      required: false
      unique: false
      description: |
        Name of the food (sub-)(sub-)group 
    attachedToCode:
      column: DS_DS_CLASS
      column-type: nvarchar(20)
      required: false
      unique: true
      description: |
        Dietary Supplement classification code attached to (for subgroup)
params.supplement.DietarySupplementDescriptor:
  namespace: params.supplement
  table: DS_DESCFACE
  secondaryKey:
  title: String.format("%s (code=%s)", name, code)
  icon: |
    solid tablets .supplement-color,
    solid tag .supplement-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Dietary supplement descriptor
  fields:
    code:
      column: DSDESCR_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Descriptor code
    name:
      column: DSDESCR_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Descriptor name
    facetCode:
      column: DSFACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        DS_FACET.DSFACET_CODE
      description: |
        Facet code
    householdMeasuresProposedQ:
      column: DSDESCR_HHM
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        Only for the facet with Dsfacet_type=1, 
        for the supplement quantification If HHM=1 Then HHM method is proposed Else No HHM=0
    defaultDescriptor:
      column: DSDESCR_DEFAULT
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        1:default
        0:other
      description: |
        Default Descriptor. 
        When this facet is displayed, the cursor has to be focussed on the default descriptor (only 1 defaulty): 
        1=default, 
        0=other
    otherQ:
      column: DSDESCR_OTHER
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:no
        1:yes
      description: |
        Descriptor with type='other' : 1=yes 0=no
    singleDescriptorQ:
      column: DSDESCR_SINGLE
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:not single descriptor
        1:single descriptor
      description: |
        0=not single descriptor 1=single descriptor
    displayOrder:
      column: DSDESCR_ORDER
      column-type: tinyint(3)
      required: true
      unique: true
      description: |
        Display order (1=first, 2=second, …)
    notInName:
      column: NOTINNAME
      column-type: tinyint(3)
      required: true
      unique: false
      description: |
        Not in name flag
params.supplement.DietarySupplementFacet:
  namespace: params.supplement
  table: DS_FACET
  secondaryKey: |
    DSFACET_CODE
  title: String.format("%s (code=%s)", name, code)
  icon: |
    solid tablets .supplement-color,
    solid swatchbook .supplement-color .ov-size-80 .ov-right-55 .ov-bottom-55
    
  description: |
    Dietary supplement facet
  fields:
    code:
      column: DSFACET_CODE
      column-type: nvarchar(2)
      required: true
      unique: true
      description: |
        Facet code for Dietary Supplement
    name:
      column: DSFACET_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Facet name for Dietary Supplement
    mandatoryFacetUsedForQuantificationQ:
      column: DSFACET_QUANT
      column-type: tinyint(3)
      required: true
      unique: true
      enum: |
        0:no
        1:yes
      description: |
        To identify the mandatory facet used for quantification: 1=yes, 0=no.
        Only 1 facet (physical state) is used for quantification.
    singleOrMultiSelectionOfDescriptorsQ:
      column: DSFACET_TYPE
      column-type: tinyint(3)
      required: true
      unique: true
      enum: |
        0:mono
        1:multi
      description: |
        Facet with Mono or Multi selection of descriptors 
        0=mono, 
        1=multi
    attributedToAllSupplementsQ:
      column: DSFACET_MAIN
      column-type: tinyint(3)
      required: true
      unique: true
      enum: |
        0:no
        1:yes
      description: |
        For maintenance: Main facets to be attributed to all supplements: 1=yes, 0=no.
    orderToAsk:
      column: DSFACET_ORDER
      column-type: int(10)
      required: true
      unique: true
      description: |
        Order to ask the facet (first, second...)
    labelOnHowToAskTheFacetQuestion:
      column: DSFACET_QUEST
      column-type: nvarchar(300)
      required: true
      unique: true
      description: |
        Label on how to ask the facet question

