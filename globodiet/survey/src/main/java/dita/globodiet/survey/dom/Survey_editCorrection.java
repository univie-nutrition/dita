/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
// Auto-generated by Causeway-Stuff code generator.
package dita.globodiet.survey.dom;

import org.apache.causeway.applib.annotation.Action;
import org.apache.causeway.applib.annotation.ActionLayout;
import org.apache.causeway.applib.annotation.ActionLayout.Position;
import org.apache.causeway.applib.annotation.MemberSupport;
import org.apache.causeway.applib.annotation.Optionality;
import org.apache.causeway.applib.annotation.Parameter;
import org.apache.causeway.applib.annotation.ParameterLayout;

import lombok.RequiredArgsConstructor;

import dita.recall24.dto.Correction24;

@Action
@ActionLayout(
        sequence = "1",
        associateWith = "correctionView",
        position = Position.PANEL,
        describedAs = "Edit YAML formatted interview data corrections"
)
@RequiredArgsConstructor
public class Survey_editCorrection {

    private final Survey mixee;

    @MemberSupport
    public Survey act(
            @Parameter(optionality = Optionality.OPTIONAL)
            @ParameterLayout(multiLine = 24)
            final String correction) {
        mixee.setCorrection(correction);
        return mixee;
    }

    @MemberSupport
    public String defaultCorrection() {
        return mixee.getCorrection();
    }

    @MemberSupport
    public String validateCorrection(final String correction) {
        return Correction24.tryFromYaml(correction)
            .mapSuccessAsNullable(_->(String)null)
            .mapFailureToSuccess(e->e.getMessage())
            .getValue()
            .orElse(null);
    }

}
