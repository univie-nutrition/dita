/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
// Auto-generated by DitA-Tooling
package dita.globodiet.dom.params.classification;

import org.apache.causeway.commons.functional.Either;

import dita.commons.format.FormatUtils;
import dita.globodiet.dom.params.recipe_list.RecipeGroup;
import dita.globodiet.dom.params.recipe_list.RecipeSubgroup;

//don't purge source file via GdEntityGen
public interface RecipeGrouping {

    default Either<RecipeGroup, RecipeSubgroup> toEither() {
        return this instanceof RecipeSubgroup recipeSubgroup
                ? Either.right(recipeSubgroup)
                : Either.left((RecipeGroup)this);
    }

    default String title() {
        return toEither()
                .fold(RecipeGroup::title, RecipeSubgroup::title);
    }

    /**
     * Format {@code groupCode|subgroupCode}
     * with null replaced by dash {@literal -}.
     */
    public record RecipeGroupingKey(String value) {
    }

    default RecipeGroupingKey groupingKey() {
        return this instanceof RecipeSubgroup foodSubgroup
                ? new RecipeGroupingKey(keyFor(foodSubgroup))
                : new RecipeGroupingKey(keyFor((RecipeGroup)this));
    }

    // -- HELPER

    private static String keyFor(final RecipeSubgroup recipeSubgroup) {
        var secKey = recipeSubgroup.secondaryKey();
        return String.format("%s|%s",
                FormatUtils.emptyToDash(secKey.recipeGroupCode()),
                FormatUtils.emptyToDash(secKey.code()));
    }

    private static String keyFor(final RecipeGroup recipeGroup) {
        return String.format("%s|-",
                FormatUtils.emptyToDash(recipeGroup.secondaryKey().code()));
    }

}
