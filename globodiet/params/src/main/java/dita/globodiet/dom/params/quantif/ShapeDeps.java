/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
// Auto-generated by Causeway-Stuff code generator.
package dita.globodiet.dom.params.quantif;

import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForFood;
import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForFoodGroup;
import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForFoodGroup_photoOrShape;
import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForFood_photoOrShape;
import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForRecipe;
import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForRecipeGroup;
import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForRecipeGroup_photoOrShape;
import dita.globodiet.dom.params.pathway.QuantificationMethodPathwayForRecipe_photoOrShape;
import jakarta.inject.Inject;
import java.lang.Class;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.apache.causeway.applib.annotation.Collection;
import org.apache.causeway.applib.annotation.CollectionLayout;
import org.apache.causeway.applib.annotation.MemberSupport;
import org.apache.causeway.commons.collections.Can;
import org.causewaystuff.companion.applib.decorate.CollectionTitleDecorator;
import org.causewaystuff.companion.applib.services.lookup.DependantLookupService;
import org.springframework.context.annotation.Configuration;

@Configuration
public class ShapeDeps {
    public static Can<Class<?>> mixinClasses() {
        return Can.of(Shape_dependentQuantificationMethodPathwayForFoodMappedByPhotoOrShape.class,
        Shape_dependentQuantificationMethodPathwayForFoodGroupMappedByPhotoOrShape.class,
        Shape_dependentQuantificationMethodPathwayForRecipeMappedByPhotoOrShape.class,
        Shape_dependentQuantificationMethodPathwayForRecipeGroupMappedByPhotoOrShape.class,
        Shape_dependentRecipeIngredientQuantificationMappedByShape.class);
    }

    @Collection
    @CollectionLayout(
            tableDecorator = CollectionTitleDecorator.class
    )
    @RequiredArgsConstructor
    public static class Shape_dependentQuantificationMethodPathwayForFoodMappedByPhotoOrShape {
        @Inject
        DependantLookupService dependantLookup;

        private final Shape mixee;

        @MemberSupport
        public List<QuantificationMethodPathwayForFood> coll() {
            return dependantLookup.findDependants(
                QuantificationMethodPathwayForFood.class,
                QuantificationMethodPathwayForFood_photoOrShape.class,
                QuantificationMethodPathwayForFood_photoOrShape::prop,
                mixee);
        }
    }

    @Collection
    @CollectionLayout(
            tableDecorator = CollectionTitleDecorator.class
    )
    @RequiredArgsConstructor
    public static class Shape_dependentQuantificationMethodPathwayForFoodGroupMappedByPhotoOrShape {
        @Inject
        DependantLookupService dependantLookup;

        private final Shape mixee;

        @MemberSupport
        public List<QuantificationMethodPathwayForFoodGroup> coll() {
            return dependantLookup.findDependants(
                QuantificationMethodPathwayForFoodGroup.class,
                QuantificationMethodPathwayForFoodGroup_photoOrShape.class,
                QuantificationMethodPathwayForFoodGroup_photoOrShape::prop,
                mixee);
        }
    }

    @Collection
    @CollectionLayout(
            tableDecorator = CollectionTitleDecorator.class
    )
    @RequiredArgsConstructor
    public static class Shape_dependentQuantificationMethodPathwayForRecipeMappedByPhotoOrShape {
        @Inject
        DependantLookupService dependantLookup;

        private final Shape mixee;

        @MemberSupport
        public List<QuantificationMethodPathwayForRecipe> coll() {
            return dependantLookup.findDependants(
                QuantificationMethodPathwayForRecipe.class,
                QuantificationMethodPathwayForRecipe_photoOrShape.class,
                QuantificationMethodPathwayForRecipe_photoOrShape::prop,
                mixee);
        }
    }

    @Collection
    @CollectionLayout(
            tableDecorator = CollectionTitleDecorator.class
    )
    @RequiredArgsConstructor
    public static class Shape_dependentQuantificationMethodPathwayForRecipeGroupMappedByPhotoOrShape {
        @Inject
        DependantLookupService dependantLookup;

        private final Shape mixee;

        @MemberSupport
        public List<QuantificationMethodPathwayForRecipeGroup> coll() {
            return dependantLookup.findDependants(
                QuantificationMethodPathwayForRecipeGroup.class,
                QuantificationMethodPathwayForRecipeGroup_photoOrShape.class,
                QuantificationMethodPathwayForRecipeGroup_photoOrShape::prop,
                mixee);
        }
    }

    @Collection
    @CollectionLayout(
            tableDecorator = CollectionTitleDecorator.class
    )
    @RequiredArgsConstructor
    public static class Shape_dependentRecipeIngredientQuantificationMappedByShape {
        @Inject
        DependantLookupService dependantLookup;

        private final Shape mixee;

        @MemberSupport
        public List<RecipeIngredientQuantification> coll() {
            return dependantLookup.findDependants(
                RecipeIngredientQuantification.class,
                RecipeIngredientQuantification_shape.class,
                RecipeIngredientQuantification_shape::prop,
                mixee);
        }
    }
}
