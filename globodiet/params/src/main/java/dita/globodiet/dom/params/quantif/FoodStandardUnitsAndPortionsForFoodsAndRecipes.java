/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 */
// Auto-generated by DitA-Tooling
package dita.globodiet.dom.params.quantif;

import jakarta.inject.Named;
import java.lang.Double;
import java.lang.String;
import javax.jdo.annotations.Column;
import javax.jdo.annotations.DatastoreIdentity;
import javax.jdo.annotations.PersistenceCapable;
import lombok.Getter;
import lombok.Setter;
import org.apache.causeway.applib.annotation.DomainObject;
import org.apache.causeway.applib.annotation.DomainObjectLayout;
import org.apache.causeway.applib.annotation.Property;
import org.apache.causeway.applib.annotation.PropertyLayout;

/**
 * food standard units and portions for foods and recipes
 */
@Named("dita.globodiet.params.quantif.FoodStandardUnitsAndPortionsForFoodsAndRecipes")
@DomainObject
@DomainObjectLayout(
    describedAs = "food standard units and portions for foods and recipes"
)
@PersistenceCapable(
    table = "M_STDUTS"
)
@DatastoreIdentity(
    strategy = javax.jdo.annotations.IdGeneratorStrategy.IDENTITY,
    column = "id"
)
public class FoodStandardUnitsAndPortionsForFoodsAndRecipes {
  /**
   * Standard unit quantity
   */
  @Property
  @PropertyLayout(
      describedAs = "Standard unit quantity"
  )
  @Column(
      name = "STDU_QUANT",
      allowsNull = "true"
  )
  @Getter
  @Setter
  private Double standardUnitQuantity;

  /**
   * Food or Recipe identification number (=FOODMUM for food or =R_IDNUM for recipe); either Foods.foodnum OR Mixedrec.r_idnum
   */
  @Property
  @PropertyLayout(
      describedAs = "Food or Recipe identification number (=FOODMUM for food or =R_IDNUM for recipe); either Foods.foodnum OR Mixedrec.r_idnum"
  )
  @Column(
      name = "ID_NUM",
      allowsNull = "true",
      length = 5
  )
  @Getter
  @Setter
  private String foodOrRecipeIdentificationNumber;

  /**
   * 1 = raw, 2 = cooked (as estimated)
   */
  @Property
  @PropertyLayout(
      describedAs = "1 = raw, 2 = cooked (as estimated)"
  )
  @Column(
      name = "RAW_COOKED",
      allowsNull = "true",
      length = 1
  )
  @Getter
  @Setter
  private String rawOrCooked;

  /**
   * 1 = without un-edible part, 2 = with un-edible (as estimated)
   */
  @Property
  @PropertyLayout(
      describedAs = "1 = without un-edible part, 2 = with un-edible (as estimated)"
  )
  @Column(
      name = "EDIB",
      allowsNull = "true",
      length = 1
  )
  @Getter
  @Setter
  private String withUnediblePartQ;

  /**
   * 1 = STDU for food, 2 = STDU for recipe
   */
  @Property
  @PropertyLayout(
      describedAs = "1 = STDU for food, 2 = STDU for recipe"
  )
  @Column(
      name = "TYPE",
      allowsNull = "true",
      length = 1
  )
  @Getter
  @Setter
  private String type;

  /**
   * Comment attached to the standard unit
   */
  @Property
  @PropertyLayout(
      describedAs = "Comment attached to the standard unit"
  )
  @Column(
      name = "COMMENT",
      allowsNull = "true",
      length = 100
  )
  @Getter
  @Setter
  private String commentAttachedToTheStandardUnit;

  /**
   * Standard unit code for the same food/recipe (0001, 0002, 0003)
   */
  @Property
  @PropertyLayout(
      describedAs = "Standard unit code for the same food/recipe (0001, 0002, 0003)"
  )
  @Column(
      name = "UNIT_CODE",
      allowsNull = "true",
      length = 4
  )
  @Getter
  @Setter
  private String standardUnitCodeForTheSameFoodOrRecipe;

  /**
   * G = in grams, V = in ml (volume)
   */
  @Property
  @PropertyLayout(
      describedAs = "G = in grams, V = in ml (volume)"
  )
  @Column(
      name = "STDU_UNIT",
      allowsNull = "true",
      length = 1
  )
  @Getter
  @Setter
  private String unit;

  /**
   * Order to display the standard unit
   */
  @Property
  @PropertyLayout(
      describedAs = "Order to display the standard unit"
  )
  @Column(
      name = "D_ORDER",
      allowsNull = "true"
  )
  @Getter
  @Setter
  private Double orderToDisplayTheStandardUnit;
}
