# -----------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#       http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# -----------------------------------------------------------

entity:
  namespace: recipe_list
  table: MIXEDREC
  secondaryKey: |
    R_IDNUM
  # unfortunately aliases are violating the unique constraint based on {R_IDNUM, TYPE}
  suppressUniqueConstraint: true
  title: String.format("%s (code=%s)", name, code)
  icon: solid stroopwafel .recipe-color
  description: |
    Mixed (a priory) Recipe (not an on-the-fly one):
    After preparation, the different ingredients cannot be identified 
    and quantified separately, as those are derived from cook books (for homemade and similar recipes), 
    internet or are based on information received from the industry (for commercial recipes). 
    They are entered as standard recipes with the RECIPE MANAGER and handled at the country level 
    prior to the commencement of the interviews. 
    The mixed recipe database may contain three types of recipes: 
    1) ‘open recipes’, 
    2) ‘closed recipes’ and 
    3) ‘strictly commercial with brand recipes’.
    For each mixed recipe, information on the expected variation of ingredients 
    within the study population needs to be collected, too. 
    If the variation is found to be great, the recipe should be treated as an open recipe. 
    It is also possible to enter several standard variations of a recipe depending on regions. 
    If no variations are expected, a recipe should be treated as a closed recipe 
    or as a strictly commercial recipe. 
    Furthermore, it has to be decided if each ingredient is fixed or substitutable. 
    When entering the recipe ingredients with RECIPE MANAGER, 
    the ingredients are described and quantified like in the food pathway.
  fields:
    code:
      column: R_IDNUM
      column-type: nvarchar(5)
      required: true
      unique: false
      description: |
        Recipe ID number
    recipeGroupCode:
      column: R_GROUP
      column-type: nvarchar(2)
      required: true
      unique: false
      foreignKeys: |
        RGROUPS.GROUP
      description: |
        Group code of the recipe classification. (TODO for alias entries: not set, but perhaps could be)
    recipeSubgroupCode:
      column: R_SUBGROUP
      column-type: nvarchar(2)
      required: false
      unique: false
      discriminator: |
        R_GROUP
      foreignKeys: |
        RSUBGR.SUBGROUP
      description: |
        Subgroup code of the recipe classification
    name:
      column: R_NAME
      column-type: nvarchar(100)
      required: true
      unique: true
      description: |
        Recipe name
    recipeType:
      column: R_TYPE
      column-type: nvarchar(3)
      required: true
      unique: false
      enum: |
        1.1:Open – Known 
        1.2:Open – Unknown 
        1.3:Open with brand 
        2.1:Closed 
        2.2:Closed with brand 
        3.0:Commercial 
        4.1:New – Known 
        4.2:New – Unknown
      description: |
        Type of recipe: 
        1.1=Open – Known 
        1.2=Open – Unknown 
        1.3=Open with brand 
        2.1=Closed 
        2.2=Closed with brand 
        3.0=Commercial 
        4.1=New – Known 
        4.2=New – Unknown
    brandNameForCommercialRecipe:
      column: R_BRAND
      column-type: nvarchar(100)
      required: false
      unique: true
      description: |
        Brand name for commercial recipe
    aliasQ:
      column: TYPE
      column-type: nvarchar(2)
      required: false
      unique: true
      enum: |
        :regular:is regular entry
        SH:alias:is alias entry
      description: |
        whether is an alias (SH=shadow)
    hasSubRecipeQ:
      column: R_SUB
      column-type: tinyint(3)
      required: true
      unique: false
      enum: |
        0:sub-recipe excluded:recipe without sub-recipe
        1:sub-recipe included:recipe with sub-recipe
      description: |
        0=recipe without sub-recipe 
        1=recipe with sub-recipe
    status:
      column: STATUS
      column-type: nvarchar(1)
      required: true
      unique: false
      enum: |
        1:finalized:enabled for interviews
        2:with unknown quantity:with unknown quantity (disabled for interviews)
        3:to be completed:to be completed (disabled for interviews)
        4:empty:empty (disabled for interviews)
      description: |
        1=finalized (enabled for interviews)
        2=with unknown quantity (disabled for interviews)
        3=to be completed (disabled for interviews)
        4=empty (disabled for interviews)
